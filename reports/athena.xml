<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="429" errors="0" failures="13" skip="0"><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_grant_type_invalid" time="0.105"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_invalid_client_id" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_invalid_client_secret" time="0.191"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_missing_client_id" time="0.159"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_missing_grant_type" time="0.134"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_missing_username" time="0.099"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_password_invalid" time="0.279"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_error_oauth_token_username_invalid" time="0.180"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_new_client_token_is_generated_every_time" time="0.389"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_new_password_token_is_generated_every_time" time="0.539"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_new_token_expires_in_aprox_15555600_seconds" time="0.182"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_oauth_token_client_credentials_result_keys" time="0.213"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_oauth_token_client_credentials_valid_params" time="0.187"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_oauth_token_password_result_keys" time="0.263"></testcase><testcase classname="app.tests.test_athena.test_athena_auth.TestAthenaPOSTAuth" name="test_oauth_token_password_valid_params" time="0.249"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_editable_cancelable_in_the_response" time="0.797"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_error_booking_not_found" time="0.146"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_third_party_user_booking_details_by_uuid" time="0.770"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_trusted_user_booking_details_by_external_id" time="2.444"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_updated_booking_details" time="1.335"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_user_booking_details_by_booking_number" time="0.856"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_user_booking_details_by_external_id" time="0.670"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_user_booking_details_by_uuid" time="0.836"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_get_user_booking_details_result" time="0.708"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaBookingDetailsIDN" name="test_user_uuid_in_the_response" time="0.970"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_error_filter_invalid" time="0.134"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_error_order_invalid" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_error_page_invalid" time="0.094"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings" time="0.576"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_10_canceled" time="1.011"><failure type="builtins.AssertionError" message='&#10;Expected: &lt;200&gt;&#10;     but: was &lt;500&gt;&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=canceled&#10;&#10;RESPONSE:  {&#10;    "errors": [&#10;        {&#10;            "description": "An unknown error occured.",&#10;            "message": "unknown_error"&#10;        }&#10;    ]&#10;}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=canceled HTTP/1.1" 500 86&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/utils/ddt.py", line 141, in wrapper
    return func(self, *args, **kwargs)
  File "/app/tests/test_athena/test_athena_booking_details.py", line 177, in test_get_bookings_filter_response_code
    assert_that(self.t.api.code, equal_to(200))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: <200>
     but: was <500>

-------------------- >> begin captured stdout << ---------------------

REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=canceled

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=canceled HTTP/1.1" 500 86
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[
REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=canceled

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_11_no_show" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_1_open" time="0.534"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_2_confirmed" time="0.782"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_3_rejected" time="1.026"><failure type="builtins.AssertionError" message='&#10;Expected: &lt;200&gt;&#10;     but: was &lt;500&gt;&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected&#10;&#10;RESPONSE:  {&#10;    "errors": [&#10;        {&#10;            "description": "An unknown error occured.",&#10;            "message": "unknown_error"&#10;        }&#10;    ]&#10;}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/utils/ddt.py", line 141, in wrapper
    return func(self, *args, **kwargs)
  File "/app/tests/test_athena/test_athena_booking_details.py", line 177, in test_get_bookings_filter_response_code
    assert_that(self.t.api.code, equal_to(200))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: <200>
     but: was <500>

-------------------- >> begin captured stdout << ---------------------

REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[
REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_4_upcoming" time="0.615"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_5_running" time="0.178"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_6_finished" time="0.639"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_7_rated" time="0.489"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_8_unrated" time="0.468"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_filter_response_code_9_not_canceled" time="0.580"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_finished" time="0.513"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_pagination" time="0.848"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_rejected" time="8.815"><failure type="builtins.AssertionError" message='None&#10;Expected: &lt;200&gt;&#10;     but: was &lt;500&gt;&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected&#10;&#10;RESPONSE:  {&#10;    "errors": [&#10;        {&#10;            "description": "An unknown error occured.",&#10;            "message": "unknown_error"&#10;        }&#10;    ]&#10;}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------'><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_booking_details.py", line 146, in test_get_bookings_rejected
    self.t.test_get_bookings_rejected()
  File "/app/tests/test_athena/test_athena_booking_details.py", line 60, in test_get_bookings_rejected
    assert_200(lambda: self.api.send_request(GET))
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 49, in wrapped_f
    return Retrying(*dargs, **dkw).call(f, *args, **kw)
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 212, in call
    raise attempt.get()
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 247, in get
    six.reraise(self.value[0], self.value[1], self.value[2])
  File "/usr/local/lib/python3.5/site-packages/six.py", line 686, in reraise
    raise value
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 200, in call
    attempt = Attempt(fn(*args, **kwargs), attempt_number, False)
  File "/app/utils/helpers.py", line 151, in assert_200
    assert_that(f(), equal_to(200), err)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)
None
Expected: <200>
     but: was <500>

-------------------- >> begin captured stdout << ---------------------

REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "GET /bookings?filter=rejected HTTP/1.1" 500 86
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[
REQUEST:  curl -X GET -H "Authorization: Bearer KjThqYb5d0rc17Aa9SbWyKyRV0mZIJOh" https://athena-auto.blacklane.io/bookings?filter=rejected

RESPONSE:  {
    "errors": [
        {
            "description": "An unknown error occured.",
            "message": "unknown_error"
        }
    ]
}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaClientBookingDetails" name="test_get_bookings_result_contains_keys" time="0.484"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_error_filter_invalid" time="0.115"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_error_order_invalid" time="0.116"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_error_page_invalid" time="0.122"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_error_unauthorized" time="0.091"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings" time="0.441"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_canceled" time="0.328"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_10_canceled" time="0.296"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_11_no_show" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_1_open" time="0.480"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_2_confirmed" time="0.717"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_3_rejected" time="0.615"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_4_upcoming" time="0.514"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_5_running" time="0.204"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_6_finished" time="0.593"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_7_rated" time="0.490"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_8_unrated" time="0.452"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_filter_response_code_9_not_canceled" time="0.398"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_finished" time="0.532"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_rejected" time="0.505"></testcase><testcase classname="app.tests.test_athena.test_athena_booking_details.TestAthenaUserBookingDetails" name="test_get_bookings_result_contains_keys" time="0.383"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_dropoff_conflict_place_id_trusted" time="0.096"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_dropoff_conflict_trusted_1___dropoff_airport_iata____TXL__" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_dropoff_conflict_trusted_2___dropoff_uuid____6ad41823_a4cc_4bd5_ad55_2b8e511eb0ee__" time="0.094"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_pickup_conflict_place_id_trusted" time="0.094"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_pickup_conflict_trusted_1___pickup_airport_iata____TXL__" time="0.102"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_pickup_conflict_trusted_2___pickup_uuid____6ad41823_a4cc_4bd5_ad55_2b8e511eb0ee__" time="0.097"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_service_type_invalid" time="0.098"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_area_not_covered_for_impossible_routes" time="0.322"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_area_not_covered_outside_business_district" time="0.257"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_dropoff_address_missing" time="0.115"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_dropoff_latitude_missing" time="0.118"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_dropoff_longitude_missing" time="0.122"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_pickup_address_missing" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_pickup_latitude_missing" time="0.117"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_error_transfer_pickup_longitude_missing" time="0.128"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_nonce_uniqueness" time="2.437"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_hourly_address_and_coordinates" time="2.528"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_hourly_coordinates_in_response" time="2.217"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_hourly_iata" time="2.407"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_transfer_address_and_coordinates" time="2.492"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_transfer_coordinates_in_response" time="2.304"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_bookings_transfer_iata" time="2.148"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_user_bookings_hourly_place_ids_in_response" time="2.263"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaTrustedPOSTBookings" name="test_post_user_bookings_transfer_place_ids_in_response" time="2.388"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_booking_number_in_response" time="0.687"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_depart_at_too_early" time="0.405"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_dropoff_conflict_untrusted_1___dropoff_airport_iata____TXL__" time="0.104"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_dropoff_conflict_untrusted_2___dropoff_uuid____6ad41823_a4cc_4bd5_ad55_2b8e511eb0ee__" time="0.115"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_dropoff_missing_for_untrusted" time="0.123"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_duration_invalid_impossible_division_by_3600" time="0.125"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_external_id_invalid" time="0.455"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_external_id_invalid_characters_1_bla_bla" time="0.410"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_external_id_invalid_characters_2__ÄN_ø" time="0.409"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_external_id_invalid_characters_3_py_thon" time="0.409"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_external_id_invalid_when_id_not_unique" time="0.840"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_flight_number_missing" time="0.128"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_frequent_flyer_number_invalid" time="0.370"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_frequent_flyer_number_missing" time="0.403"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_frequent_flyer_program_invalid" time="0.353"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_frequent_flyer_program_missing" time="0.363"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_hourly_depart_at_in_the_past" time="0.281"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_hourly_duration_missing" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_invalid_affiliate_id_1_None" time="0.137"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_invalid_affiliate_id_2_12345678876543211" time="0.382"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_invalid_affiliate_used_at_1_None" time="0.143"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_invalid_affiliate_used_at_2_2019_10_22T" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_payment_method_invalid_third_party" time="0.348"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_payment_method_invalid_user" time="0.295"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_payment_method_missing_third_party" time="0.123"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_payment_method_missing_user" time="0.125"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_pickup_conflict_case_2_untrusted_1___pickup_airport_iata____TXL__" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_pickup_conflict_case_2_untrusted_2___pickup_uuid____6ad41823_a4cc_4bd5_ad55_2b8e511eb0ee__" time="0.137"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_pickup_conflict_case_2_untrusted_3___pickup_address____Feurigstrasse_59__10827_Berlin__" time="0.115"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_pickup_missing_for_untrusted_case2" time="0.098"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_pickup_missing_for_untrusted_case_1" time="0.093"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_depart_at_invalid" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_depart_at_missing" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_missing_token" time="0.095"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_email_invalid" time="0.394"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_email_missing" time="0.100"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_first_name_missing" time="0.125"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_last_name_missing" time="0.102"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_mobile_invalid" time="0.318"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_mobile_missing" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_post_bookings_third_party_passenger_title_invalid" time="0.350"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_bookings_passenger_title_missing" time="0.098"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_pickup_conflict_untrusted_1___pickup_airport_iata____TXL__" time="0.116"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_pickup_conflict_untrusted_2___pickup_uuid____6ad41823_a4cc_4bd5_ad55_2b8e511eb0ee__" time="0.101"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_transfer_passenger_first_name_invalid" time="0.400"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_transfer_passenger_last_name_invalid" time="0.409"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_third_party_vehicle_type_invalid" time="0.141"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_transfer_depart_at_in_the_past" time="0.358"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_vehicle_type_invalid_for_location" time="1.859"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_vehicle_type_missing" time="0.130"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_error_voucher_code_invalid" time="0.384"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_errors_missing_passenger_data_fields" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_external_id_in_response_if_sent" time="0.590"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_frequent_flyer_program_functionality_1___asia_miles____1282084709__" time="0.519"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_frequent_flyer_program_functionality_2___miles_and_more____992003004357384__" time="0.606"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_nonce_uniqueness" time="0.736"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_affiliates_chain_1" time="0.595"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_billing_data" time="0.529"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_editable_cancelable_keys" time="0.599"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_non_ascii_names" time="0.614"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_send_sms_1_False" time="0.512"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_send_sms_2_True" time="0.514"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_third_party_hourly" time="0.509"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_third_party_transfer" time="0.513"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_transfer_result" time="0.512"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_user_hourly_iata" time="0.511"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_user_transfer_http_code" time="0.596"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_user_transfer_price_keys" time="0.498"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_bookings_with_external_agent_code" time="0.535"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_passenger_title_unknown" time="0.588"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_transfer_check_email" time="0.615"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_transfer_check_mobile" time="0.512"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_transfer_check_passenger_names" time="0.511"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_transfer_check_title" time="0.519"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_third_party_bookings_transfer_pickup_sign_entry" time="0.607"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly" time="0.513"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_place_id" time="0.510"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_price_keys" time="0.559"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_result" time="0.568"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_uuid" time="0.512"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_vehicle_type_in_response_1_first_class" time="0.407"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_vehicle_type_in_response_2_business_van" time="0.514"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_hourly_vehicle_type_in_response_3_business_class" time="0.510"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_address_iata" time="0.511"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_address_place_id" time="0.513"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_address_uuid" time="0.613"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_iata" time="0.626"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_pickup_sign_entry" time="0.463"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_place_id" time="0.446"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings.TestAthenaUntrustedPOSTBookings" name="test_post_user_bookings_transfer_uuid" time="0.579"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_booking_identifier_conflict_case_1" time="0.742"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_booking_identifier_conflict_case_2" time="0.651"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_booking_identifier_conflict_case_3" time="0.631"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_booking_identifier_conflict_case_4" time="0.664"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancel_booking_by_booking_number" time="0.852"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancel_booking_by_external_id_1_transfer" time="0.728"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancel_booking_by_external_id_2_hourly" time="0.794"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancel_booking_by_uuid_1_transfer" time="0.736"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancel_booking_by_uuid_2_hourly" time="0.682"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancelled_booking_external_id_in_response" time="0.786"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancelled_booking_number_in_response" time="0.852"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_cancelled_booking_uuid_in_response" time="0.790"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_error_booking_not_found" time="0.122"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_error_cancellation_not_allowed_1_uuid" time="0.868"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_error_cancellation_not_allowed_2_external_id" time="0.875"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_error_cancellation_not_allowed_3_booking_number" time="0.909"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_cancellation.TestAthenaCancelBooking" name="test_error_unauthorized" time="0.099"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_1___pickup_sign____BLKLN__" time="0.814"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_2___send_sms___True_" time="0.860"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_3___reference____INV_2931__" time="0.756"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_booking_not_changed_1___pickup_sign____BLKLN__" time="0.878"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_booking_not_changed_2___send_sms___False_" time="0.772"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_by_uuid_booking_not_changed_3___reference____INV_555__" time="0.748"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_depart_at" time="1.044"><failure type="builtins.AssertionError" message="&#10;Expected: '2019-12-14T14:46:50+00:00'&#10;     but: was '2019-12-14T15:46:50'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/e499eac8-cb4e-4ba4-85d1-0ee7dfa1d100 -d'{&quot;depart_at&quot;: &quot;2019-12-14T14:46:50+00:00&quot;}'&#10;&#10;&#10;REQUEST-ID 41d28e59-b674-4627-af1c-51c1859458b6&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '418444977', 'booking_number': '307425349', 'car_rating': None, 'nonce': '526fa66e-b272-4133-ba91-c706ec3dc60e', 'vehicle_type': 'first_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.509807', 'pickup_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '7e94b839-d50c-47fc-b69d-cf8edb3a9241', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:55Z', 'estimated_duration': 1757, 'pickup_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.381181', 'polyline': 'iyn_IkotpA`@lOFzBEXBnA?T@v@?j@UDq@FQ@c@CmKwAo@EoBAe@A_CYqC[WBcDU_@BMBOJOXMd@GNOTKJKBK@@`@DzAd@xPh@~Sp@jWrB~w@~@n]AbBMjAM~@A@[b@M\\Gb@Cl@BfAFb@Tp@V`@TND@Fd@Z|@FZZdLtBvs@PfHh@pSp@tTpAhf@C`AOn@KHOPY|@Ix@?pANjANb@RXX^h@v@FbAF`ERdH`@rOLdE~@b]bAr^x@bZ~@|]pBrx@RlHLrERfHf@Ep@ARDRMRCbAIX?n@Nr@`@`@RVDTARKRQPWRc@T[XQRId@C^@PElAh@z@ZpA\\|AZxBTtAP~@Pt@Vv@Xx@b@Vd@TRT^Vd@V~@V|BDnB?bCDfBLdAPv@Xt@d@~@|DnF~DhFf@X|OdUpG|IjJbMn[`c@zQzV~Q`WvEfGxAhB|[t_@~PfStDvEhF~GlClDfKrNxEnGvMtQtLjP~JdNtTjZd[tb@hX~^xr@l`AnYl`@fFhHHFX\\hB|Bx@|@v@n@~AdAtAl@pA^hCf@jFx@XH|@RnC\\tLjBbBPz@Ad@A`ASbAYr@]x@i@\\Yt@w@r@cAp@gAzAqC`AiBl@aA`AiAd@c@LC\\Ib@S`@Mt@Fd@Dd@Nv@f@\\Zz@rAnElHnB`Dh@hA^tAHTRtAFv@DNF^DjARhGf@bNj@lPFvB?jBClBIhBUrCgA~Jw@lHSvAW`BWbAi@e@gBgBY_@Q_@Y{@U}@aBuJKo@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': None, 'billing_city': None, 'special_requests': None, 'estimated_distance': 21464, 'flight': None, 'reference': None, 'dropoff_latitude': '52.421583', 'pickup_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'depart_at': '2019-12-14T15:46:50+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 6855, 'vat_amount': 1302, 'total_amount': 8157, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -6855, 'vat_amount': -1302, 'total_amount': -8157, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 6855, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.179281'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Leipziger Str. 3, 10117 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Kronprinzessinnenweg 250, 14109 Berlin, Berlin', vehicle_type='first_class')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Kronprinzessinnenweg 250, 14109 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Leipziger Str. 3, 10117 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='first_class')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 3309&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UpdateBookingDepartAt(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UpdateBookingDepartAt'&gt;: Setting up next sequence (0)&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/e499eac8-cb4e-4ba4-85d1-0ee7dfa1d100 HTTP/1.1&quot; 200 1832&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 154, in test_booking_update_depart_at
    self.api.response[RESULT]['depart_at'][:19], equal_to(update_depart_at.depart_at))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: '2019-12-14T14:46:50+00:00'
     but: was '2019-12-14T15:46:50'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/e499eac8-cb4e-4ba4-85d1-0ee7dfa1d100 -d'{"depart_at": "2019-12-14T14:46:50+00:00"}'


REQUEST-ID 41d28e59-b674-4627-af1c-51c1859458b6


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '418444977', 'booking_number': '307425349', 'car_rating': None, 'nonce': '526fa66e-b272-4133-ba91-c706ec3dc60e', 'vehicle_type': 'first_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.509807', 'pickup_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '7e94b839-d50c-47fc-b69d-cf8edb3a9241', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:55Z', 'estimated_duration': 1757, 'pickup_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.381181', 'polyline': 'iyn_IkotpA`@lOFzBEXBnA?T@v@?j@UDq@FQ@c@CmKwAo@EoBAe@A_CYqC[WBcDU_@BMBOJOXMd@GNOTKJKBK@@`@DzAd@xPh@~Sp@jWrB~w@~@n]AbBMjAM~@A@[b@M\\Gb@Cl@BfAFb@Tp@V`@TND@Fd@Z|@FZZdLtBvs@PfHh@pSp@tTpAhf@C`AOn@KHOPY|@Ix@?pANjANb@RXX^h@v@FbAF`ERdH`@rOLdE~@b]bAr^x@bZ~@|]pBrx@RlHLrERfHf@Ep@ARDRMRCbAIX?n@Nr@`@`@RVDTARKRQPWRc@T[XQRId@C^@PElAh@z@ZpA\\|AZxBTtAP~@Pt@Vv@Xx@b@Vd@TRT^Vd@V~@V|BDnB?bCDfBLdAPv@Xt@d@~@|DnF~DhFf@X|OdUpG|IjJbMn[`c@zQzV~Q`WvEfGxAhB|[t_@~PfStDvEhF~GlClDfKrNxEnGvMtQtLjP~JdNtTjZd[tb@hX~^xr@l`AnYl`@fFhHHFX\\hB|Bx@|@v@n@~AdAtAl@pA^hCf@jFx@XH|@RnC\\tLjBbBPz@Ad@A`ASbAYr@]x@i@\\Yt@w@r@cAp@gAzAqC`AiBl@aA`AiAd@c@LC\\Ib@S`@Mt@Fd@Dd@Nv@f@\\Zz@rAnElHnB`Dh@hA^tAHTRtAFv@DNF^DjARhGf@bNj@lPFvB?jBClBIhBUrCgA~Jw@lHSvAW`BWbAi@e@gBgBY_@Q_@Y{@U}@aBuJKo@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': None, 'billing_city': None, 'special_requests': None, 'estimated_distance': 21464, 'flight': None, 'reference': None, 'dropoff_latitude': '52.421583', 'pickup_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'depart_at': '2019-12-14T15:46:50+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 6855, 'vat_amount': 1302, 'total_amount': 8157, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -6855, 'vat_amount': -1302, 'total_amount': -8157, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 6855, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.179281'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Leipziger Str. 3, 10117 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Kronprinzessinnenweg 250, 14109 Berlin, Berlin', vehicle_type='first_class')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Kronprinzessinnenweg 250, 14109 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Leipziger Str. 3, 10117 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='first_class')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 3309
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UpdateBookingDepartAt(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UpdateBookingDepartAt'>: Setting up next sequence (0)
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UpdateBookingDepartAt(depart_at='2019-12-14T14:46:50+00:00')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/e499eac8-cb4e-4ba4-85d1-0ee7dfa1d100 HTTP/1.1" 200 1832
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/e499eac8-cb4e-4ba4-85d1-0ee7dfa1d100 -d'{"depart_at": "2019-12-14T14:46:50+00:00"}'


REQUEST-ID 41d28e59-b674-4627-af1c-51c1859458b6


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '418444977', 'booking_number': '307425349', 'car_rating': None, 'nonce': '526fa66e-b272-4133-ba91-c706ec3dc60e', 'vehicle_type': 'first_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.509807', 'pickup_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '7e94b839-d50c-47fc-b69d-cf8edb3a9241', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:55Z', 'estimated_duration': 1757, 'pickup_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.381181', 'polyline': 'iyn_IkotpA`@lOFzBEXBnA?T@v@?j@UDq@FQ@c@CmKwAo@EoBAe@A_CYqC[WBcDU_@BMBOJOXMd@GNOTKJKBK@@`@DzAd@xPh@~Sp@jWrB~w@~@n]AbBMjAM~@A@[b@M\\Gb@Cl@BfAFb@Tp@V`@TND@Fd@Z|@FZZdLtBvs@PfHh@pSp@tTpAhf@C`AOn@KHOPY|@Ix@?pANjANb@RXX^h@v@FbAF`ERdH`@rOLdE~@b]bAr^x@bZ~@|]pBrx@RlHLrERfHf@Ep@ARDRMRCbAIX?n@Nr@`@`@RVDTARKRQPWRc@T[XQRId@C^@PElAh@z@ZpA\\|AZxBTtAP~@Pt@Vv@Xx@b@Vd@TRT^Vd@V~@V|BDnB?bCDfBLdAPv@Xt@d@~@|DnF~DhFf@X|OdUpG|IjJbMn[`c@zQzV~Q`WvEfGxAhB|[t_@~PfStDvEhF~GlClDfKrNxEnGvMtQtLjP~JdNtTjZd[tb@hX~^xr@l`AnYl`@fFhHHFX\\hB|Bx@|@v@n@~AdAtAl@pA^hCf@jFx@XH|@RnC\\tLjBbBPz@Ad@A`ASbAYr@]x@i@\\Yt@w@r@cAp@gAzAqC`AiBl@aA`AiAd@c@LC\\Ib@S`@Mt@Fd@Dd@Nv@f@\\Zz@rAnElHnB`Dh@hA^tAHTRtAFv@DNF^DjARhGf@bNj@lPFvB?jBClBIhBUrCgA~Jw@lHSvAW`BWbAi@e@gBgBY_@Q_@Y{@U}@aBuJKo@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': None, 'billing_city': None, 'special_requests': None, 'estimated_distance': 21464, 'flight': None, 'reference': None, 'dropoff_latitude': '52.421583', 'pickup_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'depart_at': '2019-12-14T15:46:50+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 6855, 'vat_amount': 1302, 'total_amount': 8157, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -6855, 'vat_amount': -1302, 'total_amount': -8157, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 6855, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.179281'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_flight_data_does_not_cancel_booking" time="0.698"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_from_address_to_airport_iata" time="1.209"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_from_hourly_to_transfer" time="1.133"><failure type="builtins.AssertionError" message="&#10;Expected: a dictionary containing {'dropoff_address': 'Feurigstraße 59, 10827 Berlin, Berlin', 'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'service_type': 'transfer'}&#10;     but: value for 'dropoff_address' was 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/7b323fad-d409-4eda-a46e-300681349017 -d'{&quot;dropoff_address&quot;: &quot;Feurigstraße 59, 10827 Berlin, Berlin&quot;, &quot;service_type&quot;: &quot;transfer&quot;, &quot;pickup_address&quot;: &quot;Oranienstraße 24, 10999 Berlin, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID ba3512ce-2a74-4271-bbe1-04c96c4226fe&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '315955060', 'booking_number': '835488259', 'car_rating': None, 'nonce': '93119aab-68cc-48ab-8d6e-8cc3c01cf58f', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'c964a787-985c-478f-9b9d-de4891c63b6c', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:58Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': None, 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsHourlyFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsHourlyFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyInteger object at 0x7fe21c8776d8&gt;&gt;, vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Flughafen 1, 12529 Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=7200, vehicle_type='business_class')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Flughafen 1, 12529 Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=7200, vehicle_type='business_class')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2157&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/7b323fad-d409-4eda-a46e-300681349017 HTTP/1.1&quot; 200 1346&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 224, in test_booking_update_from_hourly_to_transfer
    assert_that(self.api.response[RESULT], has_entries(attribs(update_booking)))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: a dictionary containing {'dropoff_address': 'Feurigstraße 59, 10827 Berlin, Berlin', 'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'service_type': 'transfer'}
     but: value for 'dropoff_address' was 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/7b323fad-d409-4eda-a46e-300681349017 -d'{"dropoff_address": "Feurigstraße 59, 10827 Berlin, Berlin", "service_type": "transfer", "pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID ba3512ce-2a74-4271-bbe1-04c96c4226fe


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '315955060', 'booking_number': '835488259', 'car_rating': None, 'nonce': '93119aab-68cc-48ab-8d6e-8cc3c01cf58f', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'c964a787-985c-478f-9b9d-de4891c63b6c', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:58Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': None, 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsHourlyFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsHourlyFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=<DeclarationWrapper for <factory.fuzzy.FuzzyInteger object at 0x7fe21c8776d8>>, vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Flughafen 1, 12529 Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=7200, vehicle_type='business_class')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsHourlyFactory(payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Flughafen 1, 12529 Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='hourly', duration=7200, vehicle_type='business_class')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2157
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/7b323fad-d409-4eda-a46e-300681349017 HTTP/1.1" 200 1346
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/7b323fad-d409-4eda-a46e-300681349017 -d'{"dropoff_address": "Feurigstraße 59, 10827 Berlin, Berlin", "service_type": "transfer", "pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID ba3512ce-2a74-4271-bbe1-04c96c4226fe


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '315955060', 'booking_number': '835488259', 'car_rating': None, 'nonce': '93119aab-68cc-48ab-8d6e-8cc3c01cf58f', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'c964a787-985c-478f-9b9d-de4891c63b6c', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:58Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': None, 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_from_transfer_to_hourly" time="1.127"><failure type="builtins.AssertionError" message="&#10;Expected: a dictionary containing {'duration': &lt;7200&gt;, 'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'service_type': 'hourly'}&#10;     but: value for 'pickup_address' was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/7eb5a4da-52cc-4def-9de4-d93b458e1c25 -d'{&quot;service_type&quot;: &quot;hourly&quot;, &quot;duration&quot;: 7200, &quot;pickup_address&quot;: &quot;Oranienstraße 24, 10999 Berlin, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID 72123ccc-ad0c-4fa7-b4e6-bf8f23023090&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '620318393', 'booking_number': '896125376', 'car_rating': None, 'nonce': 'b58a0733-f424-45cd-aa03-b61564da29d3', 'vehicle_type': 'business_class', 'driver_rating': None, 'estimated_cancelation_fee': 0.0, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '2fc034b4-4859-47fb-a936-6d2d0c95f1f9', 'service_type': 'hourly', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'included_distance': 50000, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:59Z', 'billing_street_address': None, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': None, 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'flight': None, 'reference': None, 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'duration': 7200, 'price': {'price_items': [{'net_amount': 3906, 'vat_amount': 742, 'total_amount': 4648, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -3906, 'vat_amount': -742, 'total_amount': -4648, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 3905, 'vat_rate': 0.19}, 'flight_number': ''}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Popitzweg 59, 13629 Berlin, Germany', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Oranienstraße 20, 10999 Berlin, Berlin', vehicle_type='business_class')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Oranienstraße 20, 10999 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Popitzweg 59, 13629 Berlin, Germany', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 3326&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/7eb5a4da-52cc-4def-9de4-d93b458e1c25 HTTP/1.1&quot; 200 1008&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 241, in test_booking_update_from_transfer_to_hourly
    'service_type': 'hourly'
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: a dictionary containing {'duration': <7200>, 'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'service_type': 'hourly'}
     but: value for 'pickup_address' was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/7eb5a4da-52cc-4def-9de4-d93b458e1c25 -d'{"service_type": "hourly", "duration": 7200, "pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 72123ccc-ad0c-4fa7-b4e6-bf8f23023090


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '620318393', 'booking_number': '896125376', 'car_rating': None, 'nonce': 'b58a0733-f424-45cd-aa03-b61564da29d3', 'vehicle_type': 'business_class', 'driver_rating': None, 'estimated_cancelation_fee': 0.0, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '2fc034b4-4859-47fb-a936-6d2d0c95f1f9', 'service_type': 'hourly', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'included_distance': 50000, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:59Z', 'billing_street_address': None, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': None, 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'flight': None, 'reference': None, 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'duration': 7200, 'price': {'price_items': [{'net_amount': 3906, 'vat_amount': 742, 'total_amount': 4648, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -3906, 'vat_amount': -742, 'total_amount': -4648, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 3905, 'vat_rate': 0.19}, 'flight_number': ''}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Popitzweg 59, 13629 Berlin, Germany', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Oranienstraße 20, 10999 Berlin, Berlin', vehicle_type='business_class')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Oranienstraße 20, 10999 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Popitzweg 59, 13629 Berlin, Germany', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 3326
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/7eb5a4da-52cc-4def-9de4-d93b458e1c25 HTTP/1.1" 200 1008
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/7eb5a4da-52cc-4def-9de4-d93b458e1c25 -d'{"service_type": "hourly", "duration": 7200, "pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 72123ccc-ad0c-4fa7-b4e6-bf8f23023090


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '620318393', 'booking_number': '896125376', 'car_rating': None, 'nonce': 'b58a0733-f424-45cd-aa03-b61564da29d3', 'vehicle_type': 'business_class', 'driver_rating': None, 'estimated_cancelation_fee': 0.0, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': '2fc034b4-4859-47fb-a936-6d2d0c95f1f9', 'service_type': 'hourly', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'included_distance': 50000, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:51:59Z', 'billing_street_address': None, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': None, 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'flight': None, 'reference': None, 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'duration': 7200, 'price': {'price_items': [{'net_amount': 3906, 'vat_amount': 742, 'total_amount': 4648, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -3906, 'vat_amount': -742, 'total_amount': -4648, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 3905, 'vat_rate': 0.19}, 'flight_number': ''}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_hourly_from_place_id_to_airport_iata" time="1.124"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_passenger_data" time="0.894"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_payment_method_uuid" time="0.979"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_special_requests" time="0.911"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_transfer_dropoff_address" time="1.414"><failure type="builtins.AssertionError" message="&#10;Expected: 'Oranienstraße 24, 10999 Berlin, Berlin'&#10;     but: was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/729409e7-34d1-4ff8-a9b6-332b772d0514 -d'{&quot;dropoff_address&quot;: &quot;Oranienstraße 24, 10999 Berlin, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID 45315631-faa8-46b5-9e4f-7fd86280a430&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '695159835', 'booking_number': '568985225', 'car_rating': None, 'nonce': '99918b1a-8550-4426-a5b7-e13650f7ca7e', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Oranienstraße 24', 'billing_first_name': 'Piet', 'pickup_latitude': '52.484869', 'pickup_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': 'bcf583d8-25f3-44a1-b07e-ccc6cee6d5eb', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:04Z', 'estimated_duration': 1068, 'pickup_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.35717', 'polyline': 'c~i_IsxopAyBiFa@mAw@mGKSi@k@@O\\yA~@mEvBoHRaA@s@D}@?mF@eQAcIB}MBsN?mJ@gMFi[?aC?gAFWBi@@q@DsABeB]C_BBwC?_FC_EWaBOsC]qAUOEqD_AiA]_EsA_BaAeB_A]OwCcB_DkCo@a@k@Uk@CmALcDf@gCd@VaEHcD?wEYsIQaEEc@O}@qAgGKy@GeAGkBCiSGcd@?{DIgEKkFO{HCwEJmDBm@@qAu@}JUaDC{AAmBHc@@e@CUIYEGA}@KmBIcDCaKqDaC_Ai@YbBqAbH', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Feurigstraße 59', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6063, 'flight': None, 'reference': None, 'dropoff_latitude': '52.50115', 'pickup_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.421383'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={'dropoff_address': 'Feurigstraße 59, 10827 Berlin, Berlin'})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_van')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_van')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2522&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/729409e7-34d1-4ff8-a9b6-332b772d0514 HTTP/1.1&quot; 200 1348&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 210, in test_booking_update_transfer_dropoff_address
    assert_that(self.api.response[RESULT]['dropoff_address'], equal_to(address))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: 'Oranienstraße 24, 10999 Berlin, Berlin'
     but: was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/729409e7-34d1-4ff8-a9b6-332b772d0514 -d'{"dropoff_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 45315631-faa8-46b5-9e4f-7fd86280a430


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '695159835', 'booking_number': '568985225', 'car_rating': None, 'nonce': '99918b1a-8550-4426-a5b7-e13650f7ca7e', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Oranienstraße 24', 'billing_first_name': 'Piet', 'pickup_latitude': '52.484869', 'pickup_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': 'bcf583d8-25f3-44a1-b07e-ccc6cee6d5eb', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:04Z', 'estimated_duration': 1068, 'pickup_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.35717', 'polyline': 'c~i_IsxopAyBiFa@mAw@mGKSi@k@@O\\yA~@mEvBoHRaA@s@D}@?mF@eQAcIB}MBsN?mJ@gMFi[?aC?gAFWBi@@q@DsABeB]C_BBwC?_FC_EWaBOsC]qAUOEqD_AiA]_EsA_BaAeB_A]OwCcB_DkCo@a@k@Uk@CmALcDf@gCd@VaEHcD?wEYsIQaEEc@O}@qAgGKy@GeAGkBCiSGcd@?{DIgEKkFO{HCwEJmDBm@@qAu@}JUaDC{AAmBHc@@e@CUIYEGA}@KmBIcDCaKqDaC_Ai@YbBqAbH', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Feurigstraße 59', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6063, 'flight': None, 'reference': None, 'dropoff_latitude': '52.50115', 'pickup_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.421383'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={'dropoff_address': 'Feurigstraße 59, 10827 Berlin, Berlin'})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_van')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_van')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2522
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/729409e7-34d1-4ff8-a9b6-332b772d0514 HTTP/1.1" 200 1348
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/729409e7-34d1-4ff8-a9b6-332b772d0514 -d'{"dropoff_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 45315631-faa8-46b5-9e4f-7fd86280a430


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '695159835', 'booking_number': '568985225', 'car_rating': None, 'nonce': '99918b1a-8550-4426-a5b7-e13650f7ca7e', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Oranienstraße 24', 'billing_first_name': 'Piet', 'pickup_latitude': '52.484869', 'pickup_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': 'bcf583d8-25f3-44a1-b07e-ccc6cee6d5eb', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:04Z', 'estimated_duration': 1068, 'pickup_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.35717', 'polyline': 'c~i_IsxopAyBiFa@mAw@mGKSi@k@@O\\yA~@mEvBoHRaA@s@D}@?mF@eQAcIB}MBsN?mJ@gMFi[?aC?gAFWBi@@q@DsABeB]C_BBwC?_FC_EWaBOsC]qAUOEqD_AiA]_EsA_BaAeB_A]OwCcB_DkCo@a@k@Uk@CmALcDf@gCd@VaEHcD?wEYsIQaEEc@O}@qAgGKy@GeAGkBCiSGcd@?{DIgEKkFO{HCwEJmDBm@@qAu@}JUaDC{AAmBHc@@e@CUIYEGA}@KmBIcDCaKqDaC_Ai@YbBqAbH', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Feurigstraße 59', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6063, 'flight': None, 'reference': None, 'dropoff_latitude': '52.50115', 'pickup_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.421383'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_transfer_from_address_to_coordinates" time="6.663"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_transfer_pickup_address" time="1.332"><failure type="builtins.AssertionError" message="&#10;Expected: 'Oranienstraße 24, 10999 Berlin, Berlin'&#10;     but: was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/1c349ef9-bb42-41e0-bc17-77f90059d779 -d'{&quot;pickup_address&quot;: &quot;Oranienstraße 24, 10999 Berlin, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID 917b09ba-7ee7-4717-83f7-080c75894439&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '386530544', 'booking_number': '543202183', 'car_rating': None, 'nonce': '41489151-761f-429b-9074-0ec1f67a4e80', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'f6032006-7889-4fa5-a7ba-d8a10570c8c0', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:12Z', 'estimated_duration': 652, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAeFfYg@bBe@~A[rBKnAIbAuBnLq@vDUv@K\\EAKBQHKNGf@Fj@DPMbAC^QdAwA`IsC|O}ArImElVy@nEOt@In@KIa@]o@_@wDaC}AcACKCGaBcAKIk@o@eCeD][]Ie@A{@L]TBNHl@LxANtCt@nYVnKDtBFfAFd@J\\Dh@N~@TnI^|NTzJ^dNVzJ', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 3620, 'flight': None, 'reference': None, 'dropoff_latitude': '52.509807', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.381181'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={'pickup_address': 'Feurigstraße 59, 10827 Berlin, Berlin'})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Leipziger Str. 3, 10117 Berlin, Berlin', vehicle_type='business_class')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Leipziger Str. 3, 10117 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2843&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/1c349ef9-bb42-41e0-bc17-77f90059d779 HTTP/1.1&quot; 200 1389&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 182, in test_booking_update_transfer_pickup_address
    assert_that(self.api.response[RESULT]['pickup_address'], equal_to(address))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: 'Oranienstraße 24, 10999 Berlin, Berlin'
     but: was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/1c349ef9-bb42-41e0-bc17-77f90059d779 -d'{"pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 917b09ba-7ee7-4717-83f7-080c75894439


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '386530544', 'booking_number': '543202183', 'car_rating': None, 'nonce': '41489151-761f-429b-9074-0ec1f67a4e80', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'f6032006-7889-4fa5-a7ba-d8a10570c8c0', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:12Z', 'estimated_duration': 652, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAeFfYg@bBe@~A[rBKnAIbAuBnLq@vDUv@K\\EAKBQHKNGf@Fj@DPMbAC^QdAwA`IsC|O}ArImElVy@nEOt@In@KIa@]o@_@wDaC}AcACKCGaBcAKIk@o@eCeD][]Ie@A{@L]TBNHl@LxANtCt@nYVnKDtBFfAFd@J\\Dh@N~@TnI^|NTzJ^dNVzJ', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 3620, 'flight': None, 'reference': None, 'dropoff_latitude': '52.509807', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.381181'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={'pickup_address': 'Feurigstraße 59, 10827 Berlin, Berlin'})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Leipziger Str. 3, 10117 Berlin, Berlin', vehicle_type='business_class')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Leipziger Str. 3, 10117 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2843
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/1c349ef9-bb42-41e0-bc17-77f90059d779 HTTP/1.1" 200 1389
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/1c349ef9-bb42-41e0-bc17-77f90059d779 -d'{"pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin"}'


REQUEST-ID 917b09ba-7ee7-4717-83f7-080c75894439


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '386530544', 'booking_number': '543202183', 'car_rating': None, 'nonce': '41489151-761f-429b-9074-0ec1f67a4e80', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:RWlkTVpXbHdlbWxuWlhJZ1UzUnlMaUF6TENBeE1ERXhOeUJDWlhKc2FXNHNJRWRsY20xaGJua2lNQkl1Q2hRS0VnbXJEdUhvemxHb1J4SG1UU0U5di10anhSQURLaFFLRWdsZFhZUHowRkdvUnhFa2FDZW5jejZzMFE=', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Piet', 'uuid': 'f6032006-7889-4fa5-a7ba-d8a10570c8c0', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:12Z', 'estimated_duration': 652, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAeFfYg@bBe@~A[rBKnAIbAuBnLq@vDUv@K\\EAKBQHKNGf@Fj@DPMbAC^QdAwA`IsC|O}ArImElVy@nEOt@In@KIa@]o@_@wDaC}AcACKCGaBcAKIk@o@eCeD][]Ie@A{@L]TBNHl@LxANtCt@nYVnKDtBFfAFd@J\\Dh@N~@TnI^|NTzJ^dNVzJ', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Leipziger Straße 3, 10117 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 3620, 'flight': None, 'reference': None, 'dropoff_latitude': '52.509807', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.381181'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_vehicle_type_1_first_class" time="1.332"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_vehicle_type_2_business_class" time="1.126"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_booking_update_vehicle_type_3_business_van" time="1.233"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_editable_cancelable_for_cancelling_update" time="1.423"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_booking_update_airline_code_missing" time="0.612"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_booking_update_depart_at_in_the_past" time="0.901"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_booking_update_depart_at_invalid" time="0.675"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_booking_update_flight_number_missing" time="0.628"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_booking_update_passenger_title_invalid" time="0.797"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_duration_invalid_impossible_division_by_3600" time="0.644"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_frequent_flyer_number_invalid" time="0.767"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_frequent_flyer_number_missing" time="0.706"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_frequent_flyer_program_invalid" time="0.735"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_update_bookings_passenger_mobile_invalid" time="0.657"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_error_update_not_allowed" time="1.561"><failure type="builtins.AssertionError" message="&#10;Expected: to find {'message': 'update_not_allowed', 'description': 'Either the booking was already cancelled or cannot be updated any more because the ride is on-going or finished.'} in the list of response&#10;     but: was [{'message': 'pickup_invalid', 'description': 'The provided pickup location could not be resolved to an address.'}]&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/348695222 -d'{&quot;pickup_address&quot;: &quot;Feurigstrasse 100, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID 9fc84356-0a31-4ea3-9ea6-de794f5ced0d&#10;&#10;&#10;RESPONSE {'errors': [{'message': 'pickup_invalid', 'description': 'The provided pickup location could not be resolved to an address.'}]}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_class')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2750&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/348695222 HTTP/1.1&quot; 422 123&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/348695222 HTTP/1.1&quot; 422 123&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 577, in test_error_update_not_allowed
    bookings_update_errors.update_not_allowed.as_dict()))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: to find {'message': 'update_not_allowed', 'description': 'Either the booking was already cancelled or cannot be updated any more because the ride is on-going or finished.'} in the list of response
     but: was [{'message': 'pickup_invalid', 'description': 'The provided pickup location could not be resolved to an address.'}]

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/348695222 -d'{"pickup_address": "Feurigstrasse 100, Berlin"}'


REQUEST-ID 9fc84356-0a31-4ea3-9ea6-de794f5ced0d


RESPONSE {'errors': [{'message': 'pickup_invalid', 'description': 'The provided pickup location could not be resolved to an address.'}]}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_class')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_class')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2750
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/348695222 HTTP/1.1" 422 123
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/348695222 HTTP/1.1" 422 123
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/348695222 -d'{"pickup_address": "Feurigstrasse 100, Berlin"}'


REQUEST-ID 9fc84356-0a31-4ea3-9ea6-de794f5ced0d


RESPONSE {'errors': [{'message': 'pickup_invalid', 'description': 'The provided pickup location could not be resolved to an address.'}]}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_try_to_update_dropoff_of_hourly" time="0.694"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_try_to_update_duration_of_transfer" time="0.725"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_try_to_update_service_type_transfer_and_duration" time="0.640"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_booking_twice_cancelling" time="2.038"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_duration_of_hourly_booking" time="1.009"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_frequent_flyer_program_and_number" time="1.149"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_frequent_flyer_program_and_number_to_null" time="0.920"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_multiple_fields" time="1.564"><failure type="builtins.AssertionError" message="&#10;Expected: a dictionary containing {'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'pickup_sign': 'updated pickup sign', 'reference': 'INV-9999', 'vehicle_type': 'business_class'}&#10;     but: value for 'pickup_address' was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/3acaea33-20dd-4153-82c7-9197c5614a7d -d'{&quot;pickup_address&quot;: &quot;Oranienstraße 24, 10999 Berlin, Berlin&quot;, &quot;pickup_sign&quot;: &quot;updated pickup sign&quot;, &quot;vehicle_type&quot;: &quot;business_class&quot;, &quot;reference&quot;: &quot;INV-9999&quot;}'&#10;&#10;&#10;REQUEST-ID 50751de5-ca62-4681-8ee5-db965c176399&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '910201107', 'booking_number': '273909349', 'car_rating': None, 'nonce': '01947f06-374b-4c0c-92ca-cd17a43ffb88', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Thompson', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Phillip', 'uuid': '07292bd1-7627-411f-8e79-9c5b66595766', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:35Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': True, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'ms', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'QA-095234-13122019-152@example.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': 'updated pickup sign', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': 'INV-9999', 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.ThirdPartyTransferFactory(extra={'pickup_address': 'Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_type': 'first_class'})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.ThirdPartyTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email=&lt;DeclarationWrapper for &lt;factory.declarations.Sequence object at 0x7fe21c818ef0&gt;&gt;, passenger_mobile='+491701234567', dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, service_type='transfer', passenger_title=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c822e48&gt;&gt;, vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')&#10;factory.generate: DEBUG: Sequence: Computing next value of &lt;function PassengerFactory.&lt;lambda&gt; at 0x7fe21c833378&gt; for seq=152&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email='QA-095234-13122019-152@example.com', passenger_mobile='+491701234567', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', service_type='transfer', passenger_title='ms', vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email='QA-095234-13122019-152@example.com', passenger_mobile='+491701234567', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', service_type='transfer', passenger_title='ms', vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2532&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/3acaea33-20dd-4153-82c7-9197c5614a7d HTTP/1.1&quot; 200 1379&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 401, in test_update_multiple_fields
    assert_that(self.api.response[RESULT], has_entries(attribs(update_booking)))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: a dictionary containing {'pickup_address': 'Oranienstraße 24, 10999 Berlin, Berlin', 'pickup_sign': 'updated pickup sign', 'reference': 'INV-9999', 'vehicle_type': 'business_class'}
     but: value for 'pickup_address' was 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/3acaea33-20dd-4153-82c7-9197c5614a7d -d'{"pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin", "pickup_sign": "updated pickup sign", "vehicle_type": "business_class", "reference": "INV-9999"}'


REQUEST-ID 50751de5-ca62-4681-8ee5-db965c176399


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '910201107', 'booking_number': '273909349', 'car_rating': None, 'nonce': '01947f06-374b-4c0c-92ca-cd17a43ffb88', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Thompson', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Phillip', 'uuid': '07292bd1-7627-411f-8e79-9c5b66595766', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:35Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': True, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'ms', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'QA-095234-13122019-152@example.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': 'updated pickup sign', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': 'INV-9999', 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.ThirdPartyTransferFactory(extra={'pickup_address': 'Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_type': 'first_class'})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.ThirdPartyTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email=<DeclarationWrapper for <factory.declarations.Sequence object at 0x7fe21c818ef0>>, passenger_mobile='+491701234567', dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, service_type='transfer', passenger_title=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c822e48>>, vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')
factory.generate: DEBUG: Sequence: Computing next value of <function PassengerFactory.<lambda> at 0x7fe21c833378> for seq=152
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email='QA-095234-13122019-152@example.com', passenger_mobile='+491701234567', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', service_type='transfer', passenger_title='ms', vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.ThirdPartyTransferFactory(passenger_first_name='Phillip', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Feurigstraße 59, 10827 Berlin, Berlin', passenger_email='QA-095234-13122019-152@example.com', passenger_mobile='+491701234567', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', service_type='transfer', passenger_title='ms', vehicle_type='first_class', passenger_last_name='Thompson', depart_at='2019-12-14T11:47:45+00:00')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2532
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/3acaea33-20dd-4153-82c7-9197c5614a7d HTTP/1.1" 200 1379
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/3acaea33-20dd-4153-82c7-9197c5614a7d -d'{"pickup_address": "Oranienstraße 24, 10999 Berlin, Berlin", "pickup_sign": "updated pickup sign", "vehicle_type": "business_class", "reference": "INV-9999"}'


REQUEST-ID 50751de5-ca62-4681-8ee5-db965c176399


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '910201107', 'booking_number': '273909349', 'car_rating': None, 'nonce': '01947f06-374b-4c0c-92ca-cd17a43ffb88', 'vehicle_type': 'business_class', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSmpYYVlja0JRcUVjUmxrN2ZNd1dJdEpz', 'estimated_cancelation_fee': 0.0, 'dropoff_name': 'Feurigstraße 59', 'billing_first_name': 'Piet', 'pickup_latitude': '52.50115', 'pickup_address': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Thompson', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'vehicle_max_luggage': 2, 'passenger_first_name': 'Phillip', 'uuid': '07292bd1-7627-411f-8e79-9c5b66595766', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 2, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:35Z', 'estimated_duration': 1029, 'pickup_place_id': 'P:Q2hJSm0tXzlielJPcUVjUkpLMFpFWWxuVHln', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': True, 'pickup_longitude': '13.421383', 'polyline': '}`m_I}h|pAcBjJzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBzAnD', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 59, Feurigstraße 59, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'ms', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'QA-095234-13122019-152@example.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': 'updated pickup sign', 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 24', 'billing_city': None, 'special_requests': None, 'estimated_distance': 5940, 'flight': None, 'reference': 'INV-9999', 'dropoff_latitude': '52.484869', 'pickup_address_raw': 'Oranienstraße 24, Oranienstraße 24, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 1587, 'vat_amount': 302, 'total_amount': 1889, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -1587, 'vat_amount': -302, 'total_amount': -1889, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 1587, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35717'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_pickup_and_duration_hourly" time="1.304"></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_pickup_dropoff_of_transfer" time="1.457"><failure type="builtins.AssertionError" message="&#10;Expected: a dictionary containing {'dropoff_address': 'Feurigstraße 50, 10827 Berlin, Berlin', 'pickup_address': 'Oranienstraße 23, 10999 Berlin, Berlin'}&#10;     but: value for 'pickup_address' was 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin'&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;&#10;REQUEST curl -X PUT -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/bookings/86372ad1-b662-4858-9827-ee156654fc72 -d'{&quot;dropoff_address&quot;: &quot;Feurigstraße 50, 10827 Berlin, Berlin&quot;, &quot;pickup_address&quot;: &quot;Oranienstraße 23, 10999 Berlin, Berlin&quot;}'&#10;&#10;&#10;REQUEST-ID f0c2ad64-1658-480e-83a9-944ecd061c6f&#10;&#10;&#10;RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '734463250', 'booking_number': '236114093', 'car_rating': None, 'nonce': 'ec0c22a9-6485-4604-a51d-2f63ac318133', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSnFaUmNpbXBRcUVjUmdaSndteXMyUTBJ', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.500953', 'pickup_address': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 50, 10827 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': '1722b818-db42-4243-b985-24665e0c5ed6', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:38Z', 'estimated_duration': 1106, 'pickup_place_id': 'P:Q2hJSndTbTZaVFJPcUVjUnFFX1BRazBfR1c0', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421437', 'polyline': 's`m_I_j|pAmBlKzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBbDvHjIxRb@s@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 50, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 23', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6322, 'flight': None, 'reference': None, 'dropoff_latitude': '52.48268', 'pickup_address_raw': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35328'}}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.UserBookingsTransferFactory'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.UserBookingsFactory'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877748&gt;&gt;, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8&gt;&gt;, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=&lt;DeclarationWrapper for &lt;factory.fuzzy.FuzzyChoice object at 0x7fe21c877358&gt;&gt;)&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_van')&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_van')&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /bookings HTTP/1.1&quot; 201 2748&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;PUT /bookings/86372ad1-b662-4858-9827-ee156654fc72 HTTP/1.1&quot; 200 1345&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_bookings_update.py", line 307, in test_update_pickup_dropoff_of_transfer
    assert_that(self.api.response[RESULT], has_entries(attribs(update_booking)))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: a dictionary containing {'dropoff_address': 'Feurigstraße 50, 10827 Berlin, Berlin', 'pickup_address': 'Oranienstraße 23, 10999 Berlin, Berlin'}
     but: value for 'pickup_address' was 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin'

-------------------- >> begin captured stdout << ---------------------


REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/86372ad1-b662-4858-9827-ee156654fc72 -d'{"dropoff_address": "Feurigstraße 50, 10827 Berlin, Berlin", "pickup_address": "Oranienstraße 23, 10999 Berlin, Berlin"}'


REQUEST-ID f0c2ad64-1658-480e-83a9-944ecd061c6f


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '734463250', 'booking_number': '236114093', 'car_rating': None, 'nonce': 'ec0c22a9-6485-4604-a51d-2f63ac318133', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSnFaUmNpbXBRcUVjUmdaSndteXMyUTBJ', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.500953', 'pickup_address': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 50, 10827 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': '1722b818-db42-4243-b985-24665e0c5ed6', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:38Z', 'estimated_duration': 1106, 'pickup_place_id': 'P:Q2hJSndTbTZaVFJPcUVjUnFFX1BRazBfR1c0', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421437', 'polyline': 's`m_I_j|pAmBlKzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBbDvHjIxRb@s@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 50, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 23', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6322, 'flight': None, 'reference': None, 'dropoff_latitude': '52.48268', 'pickup_address_raw': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35328'}}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.UserBookingsTransferFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.UserBookingsTransferFactory'>: reusing sequence from <class 'factories.athena.bookings_factory.UserBookingsFactory'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877748>>, payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c818dd8>>, depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type=<DeclarationWrapper for <factory.fuzzy.FuzzyChoice object at 0x7fe21c877358>>)
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.UserBookingsTransferFactory(service_type='transfer', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', vehicle_type='business_van')
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.UserBookingsTransferFactory(dropoff_address='Feurigstraße 59, 10827 Berlin, Berlin', payment_method_uuid='749dfa30-7b1f-443f-abf8-46afe75ab783', pickup_address='Oranienstraße 20, 10999 Berlin, Berlin', depart_at='2019-12-14T11:47:45+00:00', service_type='transfer', vehicle_type='business_van')
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /bookings HTTP/1.1" 201 2748
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "PUT /bookings/86372ad1-b662-4858-9827-ee156654fc72 HTTP/1.1" 200 1345
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[

REQUEST curl -X PUT -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/bookings/86372ad1-b662-4858-9827-ee156654fc72 -d'{"dropoff_address": "Feurigstraße 50, 10827 Berlin, Berlin", "pickup_address": "Oranienstraße 23, 10999 Berlin, Berlin"}'


REQUEST-ID f0c2ad64-1658-480e-83a9-944ecd061c6f


RESPONSE {'result': {'invoice_pdf_download_link': None, 'old_booking_number': '734463250', 'booking_number': '236114093', 'car_rating': None, 'nonce': 'ec0c22a9-6485-4604-a51d-2f63ac318133', 'vehicle_type': 'business_van', 'driver_rating': None, 'dropoff_place_id': 'P:Q2hJSnFaUmNpbXBRcUVjUmdaSndteXMyUTBJ', 'estimated_cancelation_fee': 0.0, 'dropoff_name': None, 'billing_first_name': 'Piet', 'pickup_latitude': '52.500953', 'pickup_address': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'invoiced': False, 'send_sms': False, 'user_uuid': '97d729a9-8409-4213-adff-4ed66f0e0a49', 'payment_method_type': 'credit_card', 'billing_company_name': None, 'confirmed_at': None, 'passenger_last_name': 'Mondrian', 'payment_method_label': 'Mario Luigi (**** **** **** 1111)', 'dropoff_address': 'Feurigstraße 50, 10827 Berlin, Berlin', 'vehicle_max_luggage': 5, 'passenger_first_name': 'Piet', 'uuid': '1722b818-db42-4243-b985-24665e0c5ed6', 'service_type': 'transfer', 'confirmation_status': 'accepted', 'billing_title': 'mr', 'vehicle_max_passengers': 5, 'passenger_mobile': '+491701234567', 'pickup_meeting_point': None, 'estimated_confirmation_at': '2019-12-13T09:52:38Z', 'estimated_duration': 1106, 'pickup_place_id': 'P:Q2hJSndTbTZaVFJPcUVjUnFFX1BRazBfR1c0', 'billing_street_address': None, 'luggage_count': None, 'billing_last_name': 'Mondrian', 'third_party_booking': False, 'pickup_longitude': '13.421437', 'polyline': 's`m_I_j|pAmBlKzBtA~BxApAz@J@n@EBLBJP^PFJh@PhCr@bKPdD@t@Av@QrFRjJRlKBrG@rMB~I?rGBzKDxQBbCJxBZjE`@pJNjDDhCEbC[fFMz@b@GfF}@|AYdBUZCp@Bf@NjAx@fDnCZRlAt@rAr@|A|@fAb@jDlA~@X~@T`B\\^Np@JfDf@~CXzFNfE@pDD@pB?hBBd@ApICpXE|L@nKCnMA`PAf\\AnCG\\e@fBmBlGU`ASlAk@hB[dAPZHBj@n@JVn@nFPp@r@jBbDvHjIxRb@s@', 'rateable': False, 'billing_country_code': None, 'passenger_locale': 'en', 'dropoff_address_raw': 'Feurigstraße 50, 10827 Berlin, Berlin', 'booking_status': 'accepted', 'passenger_title': 'mr', 'editable': True, 'passenger_add_inactive_user': None, 'airline_code': '', 'passenger_email': 'elliapi.testing@gmail.com', 'booked_buffer_time': 0, 'cancelable': True, 'pickup_sign': None, 'payment_method_uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'passenger_count': None, 'pickup_name': 'Oranienstraße 23', 'billing_city': None, 'special_requests': None, 'estimated_distance': 6322, 'flight': None, 'reference': None, 'dropoff_latitude': '52.48268', 'pickup_address_raw': 'Oranienstraße 23, Oranienstraße 23, 10999 Berlin, Berlin', 'depart_at': '2019-12-14T12:47:45+01:00', 'billing_postal_code': None, 'price': {'price_items': [{'net_amount': 2229, 'vat_amount': 424, 'total_amount': 2653, 'currency': 'EUR', 'type': 'base_price', 'vat_rate': 0.19}, {'net_amount': -2229, 'vat_amount': -424, 'total_amount': -2653, 'currency': 'EUR', 'type': 'rebate', 'vat_rate': 0.19}], 'net_amount': 0, 'vat_amount': 0, 'total_amount': 0, 'currency': 'EUR', 'discount_amount': 2228, 'vat_rate': 0.19}, 'flight_number': '', 'dropoff_longitude': '13.35328'}}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_bookings_update.TestAthenaUpdateBooking" name="test_update_service_type_to_same_value" time="0.925"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_error_password_token_required" time="0.231"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_error_unauthorized_with_invalid_token" time="0.173"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_error_unauthorized_with_missing_token" time="0.187"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_get_users_me_has_keys" time="0.223"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_get_users_me_response_code" time="0.291"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_get_users_me_same_name" time="0.246"></testcase><testcase classname="app.tests.test_athena.test_athena_get_users_me.TestAthenaGETUsersMe" name="test_get_users_me_same_uuid" time="0.190"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_missing_auth_token" time="0.156"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_area_not_covered" time="0.629"><failure type="builtins.AssertionError" message="&#10;Expected: &lt;422&gt;&#10;     but: was &lt;201&gt;&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;REQUEST:  curl -X POST -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/orders -d'{&quot;payment_method&quot;: {&quot;uuid&quot;: &quot;749dfa30-7b1f-443f-abf8-46afe75ab783&quot;, &quot;type&quot;: &quot;registered_method&quot;}, &quot;items&quot;: [{&quot;vehicle_category&quot;: &quot;first_class&quot;, &quot;pickup&quot;: {&quot;address&quot;: &quot;Flughafen 1, 12529 Berlin&quot;, &quot;type&quot;: &quot;geocodable_address&quot;}, &quot;type&quot;: &quot;transfer_trip&quot;, &quot;depart_at&quot;: &quot;2019-12-16T09:40:05+00:00&quot;, &quot;dropoff&quot;: {&quot;address&quot;: &quot;fake&quot;, &quot;type&quot;: &quot;geocodable_address&quot;}}]}'&#10;&#10;REQUEST-ID:  837f5637-d49e-4558-8009-ad0bd3493bd8&#10;&#10;RESPONSE:  {&#10;    &quot;items&quot;: [&#10;        {&#10;            &quot;billing_address&quot;: {&#10;                &quot;city&quot;: null,&#10;                &quot;company_name&quot;: null,&#10;                &quot;country_code&quot;: null,&#10;                &quot;first_name&quot;: &quot;Piet&quot;,&#10;                &quot;last_name&quot;: &quot;Mondrian&quot;,&#10;                &quot;postal_code&quot;: null,&#10;                &quot;street_address&quot;: null,&#10;                &quot;title&quot;: &quot;mr&quot;&#10;            },&#10;            &quot;booking_number&quot;: &quot;291035229&quot;,&#10;            &quot;cancelable&quot;: false,&#10;            &quot;depart_at&quot;: &quot;2019-12-16T10:40:05+01:00&quot;,&#10;            &quot;dropoff&quot;: {&#10;                &quot;address&quot;: &quot;Fakeeh University Hospital, Dubai, Dubai&quot;,&#10;                &quot;latitude&quot;: &quot;25.120876&quot;,&#10;                &quot;longitude&quot;: &quot;55.387079&quot;,&#10;                &quot;place_id&quot;: &quot;P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj&quot;,&#10;                &quot;type&quot;: &quot;google_place&quot;&#10;            },&#10;            &quot;editable&quot;: true,&#10;            &quot;invoiced&quot;: true,&#10;            &quot;passenger&quot;: {&#10;                &quot;email&quot;: &quot;elliapi.testing@gmail.com&quot;,&#10;                &quot;first_name&quot;: &quot;Piet&quot;,&#10;                &quot;last_name&quot;: &quot;Mondrian&quot;,&#10;                &quot;locale&quot;: &quot;en&quot;,&#10;                &quot;mobile&quot;: &quot;+491701234567&quot;,&#10;                &quot;title&quot;: &quot;mr&quot;,&#10;                &quot;uuid&quot;: &quot;97d729a9-8409-4213-adff-4ed66f0e0a49&quot;&#10;            },&#10;            &quot;payment_method&quot;: {&#10;                &quot;label&quot;: &quot;Credit card of Mario Luigi, ***1111&quot;,&#10;                &quot;type&quot;: &quot;registered_method&quot;,&#10;                &quot;uuid&quot;: &quot;749dfa30-7b1f-443f-abf8-46afe75ab783&quot;&#10;            },&#10;            &quot;pickup&quot;: {&#10;                &quot;address&quot;: &quot;Flughafen 1, 12529 Sch\u00f6nefeld, Brandenburg&quot;,&#10;                &quot;latitude&quot;: &quot;52.389432&quot;,&#10;                &quot;longitude&quot;: &quot;13.513708&quot;,&#10;                &quot;place_id&quot;: &quot;P:Q2hJSnp5eGx0ZnBHcUVjUk9iSzVfLVlScG1N&quot;,&#10;                &quot;type&quot;: &quot;google_place&quot;&#10;            },&#10;            &quot;price&quot;: {&#10;                &quot;currency&quot;: &quot;EUR&quot;,&#10;                &quot;items&quot;: {&#10;                    &quot;base&quot;: 2303406,&#10;                    &quot;rebate&quot;: -2303406,&#10;                    &quot;vat&quot;: 0&#10;                },&#10;                &quot;total&quot;: 0,&#10;                &quot;vat_rate&quot;: 0.19&#10;            },&#10;            &quot;rateable&quot;: false,&#10;            &quot;route&quot;: {&#10;                &quot;estimated_distance&quot;: 6250410,&#10;                &quot;estimated_duration&quot;: 224714,&#10;                &quot;polyline&quot;: &quot;aiw~HqknqAf_jAgtf@|fYo_b@rpb@m_@lvYcdApl\\z`Yf{Yb|Ixx`@pwDzlEjgP~tDklLrwO_lf@ta_@ctGxl[aaMhoTcqAx}h@ol|@|kc@ife@~eKvlDtzn@uskAplp@ccsArvkA{noFnkv@mms@zmk@mob@jg~@meE~kx@sdR|n\\{cKx|e@wsbA`fBmdrBfkU_efAnzf@}cjCd~aAqqmArywA}fv@|mf@ybWviPklE~zR`tPfhNbn^je~@ryO~cv@wkDbw`@osV|eMore@jl_A}~p@|hL~pHb}Hgek@ryXir[`vOk|JomBirt@znx@w{Y~sa@ipJlaXukVzvYcu\\|aScyGha_@mcc@bhl@iwe@pbPawv@rhFa|u@daUmgg@vuk@}niArr[{nl@a_CscPx}PszVvpSkri@hfe@mdk@f`Kkm|@j|Rm_nA_kBg~x@doXowgBpgWiamA~sq@mmlBtce@gulCjmn@{jcCt{f@}|`CzNusk@}eEiw`@l_Amxh@jsReuWpt`@yps@haDaig@}Zast@|_Rw`y@qiWsahDnsKea}@obDwij@pm@oehAfqOgj`@nkNkaJphP}`@baNaxX`sVq`LviX}pSxyr@q`G`aRyaBxuEscXtj\\koIvpo@mlJjcl@_f}@rte@cp|@n}kAqbw@|hf@kpe@fz[yl@`kj@qcIdrs@sbj@~dSw~x@wvDwwNxyL{cPtl_@}lXn{R|yPnk\\kbJfvZgr`@rdFyw`DpcI}mdAdll@ctAtsa@nnHfaHozNMswRhvQqsd@lfZg~S|xTe~Mbuf@tdIvxNmkV|_OtdFro]~pRxvi@meEnomA_mJfpg@ntGlsHx|MpnLcnHx}g@c_Npxo@chBhvy@|xPfum@ds]fs_@nsl@djcA{dC|kwA~rRbleAu{Bnhg@zmE`kKogRnb]gbfA`ifAgzlAlxi@y{`ArdkBsvaBr{k@__{@~fVyig@vxNmop@|`p@safAn}q@ir~Axyb@_s}@rc_Acf\\r~qAeek@b_}@klh@ptx@y`z@|_k@ynbAtvW{o{@zneDmuaGbg|A_k`Dvu_@axu@lh_@iuSffXaugBlvPa_oApeZkrrA~fv@wp}AxzgA{{gBr_rAuhy@rsPgtY|~\\_nWvuy@w_`AhwPss^qbBurb@pVoi_BtfKeqzDsl@}udH`XeddDxiL{_fAthRq`UnoD_wh@qpQwqwAmpKikoAfqHuklBxfCyzkAehW_orAg{Xihq@{|[ulWa{eAmec@ofj@ugy@spRu}j@&quot;&#10;            },&#10;            &quot;send_sms&quot;: false,&#10;            &quot;type&quot;: &quot;transfer_trip&quot;,&#10;            &quot;uuid&quot;: &quot;24517955-06e6-4426-8eda-eac8f0e81113&quot;,&#10;            &quot;vehicle&quot;: {&#10;                &quot;category&quot;: &quot;first_class&quot;,&#10;                &quot;max_luggage&quot;: 2,&#10;                &quot;max_passengers&quot;: 2&#10;            }&#10;        }&#10;    ]&#10;}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.TransferTripModel(extra={'dropoff': {'address': 'fake', 'type': 'geocodable_address'}})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.bookings_factory.TransferTripModel'&gt;: reusing sequence from &lt;class 'factories.athena.bookings_factory.CommonTripModel'&gt;&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', dropoff={'address': 'fake', 'type': 'geocodable_address'}, depart_at='2019-12-16T09:40:05+00:00')&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', depart_at='2019-12-16T09:40:05+00:00', dropoff={'address': 'fake', 'type': 'geocodable_address'})&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', dropoff={'address': 'fake', 'type': 'geocodable_address'}, depart_at='2019-12-16T09:40:05+00:00')&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.OrderModel(extra={'items': [{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}]})&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders HTTP/1.1&quot; 201 2649&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_orders.py", line 598, in test_error_round_trip_area_not_covered
    assert_that(self.api.code, equal_to(422))
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)

Expected: <422>
     but: was <201>

-------------------- >> begin captured stdout << ---------------------

REQUEST:  curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/orders -d'{"payment_method": {"uuid": "749dfa30-7b1f-443f-abf8-46afe75ab783", "type": "registered_method"}, "items": [{"vehicle_category": "first_class", "pickup": {"address": "Flughafen 1, 12529 Berlin", "type": "geocodable_address"}, "type": "transfer_trip", "depart_at": "2019-12-16T09:40:05+00:00", "dropoff": {"address": "fake", "type": "geocodable_address"}}]}'

REQUEST-ID:  837f5637-d49e-4558-8009-ad0bd3493bd8

RESPONSE:  {
    "items": [
        {
            "billing_address": {
                "city": null,
                "company_name": null,
                "country_code": null,
                "first_name": "Piet",
                "last_name": "Mondrian",
                "postal_code": null,
                "street_address": null,
                "title": "mr"
            },
            "booking_number": "291035229",
            "cancelable": false,
            "depart_at": "2019-12-16T10:40:05+01:00",
            "dropoff": {
                "address": "Fakeeh University Hospital, Dubai, Dubai",
                "latitude": "25.120876",
                "longitude": "55.387079",
                "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                "type": "google_place"
            },
            "editable": true,
            "invoiced": true,
            "passenger": {
                "email": "elliapi.testing@gmail.com",
                "first_name": "Piet",
                "last_name": "Mondrian",
                "locale": "en",
                "mobile": "+491701234567",
                "title": "mr",
                "uuid": "97d729a9-8409-4213-adff-4ed66f0e0a49"
            },
            "payment_method": {
                "label": "Credit card of Mario Luigi, ***1111",
                "type": "registered_method",
                "uuid": "749dfa30-7b1f-443f-abf8-46afe75ab783"
            },
            "pickup": {
                "address": "Flughafen 1, 12529 Sch\u00f6nefeld, Brandenburg",
                "latitude": "52.389432",
                "longitude": "13.513708",
                "place_id": "P:Q2hJSnp5eGx0ZnBHcUVjUk9iSzVfLVlScG1N",
                "type": "google_place"
            },
            "price": {
                "currency": "EUR",
                "items": {
                    "base": 2303406,
                    "rebate": -2303406,
                    "vat": 0
                },
                "total": 0,
                "vat_rate": 0.19
            },
            "rateable": false,
            "route": {
                "estimated_distance": 6250410,
                "estimated_duration": 224714,
                "polyline": "aiw~HqknqAf_jAgtf@|fYo_b@rpb@m_@lvYcdApl\\z`Yf{Yb|Ixx`@pwDzlEjgP~tDklLrwO_lf@ta_@ctGxl[aaMhoTcqAx}h@ol|@|kc@ife@~eKvlDtzn@uskAplp@ccsArvkA{noFnkv@mms@zmk@mob@jg~@meE~kx@sdR|n\\{cKx|e@wsbA`fBmdrBfkU_efAnzf@}cjCd~aAqqmArywA}fv@|mf@ybWviPklE~zR`tPfhNbn^je~@ryO~cv@wkDbw`@osV|eMore@jl_A}~p@|hL~pHb}Hgek@ryXir[`vOk|JomBirt@znx@w{Y~sa@ipJlaXukVzvYcu\\|aScyGha_@mcc@bhl@iwe@pbPawv@rhFa|u@daUmgg@vuk@}niArr[{nl@a_CscPx}PszVvpSkri@hfe@mdk@f`Kkm|@j|Rm_nA_kBg~x@doXowgBpgWiamA~sq@mmlBtce@gulCjmn@{jcCt{f@}|`CzNusk@}eEiw`@l_Amxh@jsReuWpt`@yps@haDaig@}Zast@|_Rw`y@qiWsahDnsKea}@obDwij@pm@oehAfqOgj`@nkNkaJphP}`@baNaxX`sVq`LviX}pSxyr@q`G`aRyaBxuEscXtj\\koIvpo@mlJjcl@_f}@rte@cp|@n}kAqbw@|hf@kpe@fz[yl@`kj@qcIdrs@sbj@~dSw~x@wvDwwNxyL{cPtl_@}lXn{R|yPnk\\kbJfvZgr`@rdFyw`DpcI}mdAdll@ctAtsa@nnHfaHozNMswRhvQqsd@lfZg~S|xTe~Mbuf@tdIvxNmkV|_OtdFro]~pRxvi@meEnomA_mJfpg@ntGlsHx|MpnLcnHx}g@c_Npxo@chBhvy@|xPfum@ds]fs_@nsl@djcA{dC|kwA~rRbleAu{Bnhg@zmE`kKogRnb]gbfA`ifAgzlAlxi@y{`ArdkBsvaBr{k@__{@~fVyig@vxNmop@|`p@safAn}q@ir~Axyb@_s}@rc_Acf\\r~qAeek@b_}@klh@ptx@y`z@|_k@ynbAtvW{o{@zneDmuaGbg|A_k`Dvu_@axu@lh_@iuSffXaugBlvPa_oApeZkrrA~fv@wp}AxzgA{{gBr_rAuhy@rsPgtY|~\\_nWvuy@w_`AhwPss^qbBurb@pVoi_BtfKeqzDsl@}udH`XeddDxiL{_fAthRq`UnoD_wh@qpQwqwAmpKikoAfqHuklBxfCyzkAehW_orAg{Xihq@{|[ulWa{eAmec@ofj@ugy@spRu}j@"
            },
            "send_sms": false,
            "type": "transfer_trip",
            "uuid": "24517955-06e6-4426-8eda-eac8f0e81113",
            "vehicle": {
                "category": "first_class",
                "max_luggage": 2,
                "max_passengers": 2
            }
        }
    ]
}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.TransferTripModel(extra={'dropoff': {'address': 'fake', 'type': 'geocodable_address'}})
factory.generate: DEBUG: <class 'factories.athena.bookings_factory.TransferTripModel'>: reusing sequence from <class 'factories.athena.bookings_factory.CommonTripModel'>
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', dropoff={'address': 'fake', 'type': 'geocodable_address'}, depart_at='2019-12-16T09:40:05+00:00')
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', depart_at='2019-12-16T09:40:05+00:00', dropoff={'address': 'fake', 'type': 'geocodable_address'})
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.TransferTripModel(vehicle_category='first_class', pickup={'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, type='transfer_trip', dropoff={'address': 'fake', 'type': 'geocodable_address'}, depart_at='2019-12-16T09:40:05+00:00')
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.bookings_factory.OrderModel(extra={'items': [{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}]})
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])
factory.generate: DEBUG: BaseFactory: Generating factories.athena.bookings_factory.OrderModel(payment_method={'uuid': '749dfa30-7b1f-443f-abf8-46afe75ab783', 'type': 'registered_method'}, items=[{'vehicle_category': 'first_class', 'pickup': {'address': 'Flughafen 1, 12529 Berlin', 'type': 'geocodable_address'}, 'type': 'transfer_trip', 'depart_at': '2019-12-16T09:40:05+00:00', 'dropoff': {'address': 'fake', 'type': 'geocodable_address'}}])
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders HTTP/1.1" 201 2649
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[
REQUEST:  curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/orders -d'{"payment_method": {"uuid": "749dfa30-7b1f-443f-abf8-46afe75ab783", "type": "registered_method"}, "items": [{"vehicle_category": "first_class", "pickup": {"address": "Flughafen 1, 12529 Berlin", "type": "geocodable_address"}, "type": "transfer_trip", "depart_at": "2019-12-16T09:40:05+00:00", "dropoff": {"address": "fake", "type": "geocodable_address"}}]}'

REQUEST-ID:  837f5637-d49e-4558-8009-ad0bd3493bd8

RESPONSE:  {
    "items": [
        {
            "billing_address": {
                "city": null,
                "company_name": null,
                "country_code": null,
                "first_name": "Piet",
                "last_name": "Mondrian",
                "postal_code": null,
                "street_address": null,
                "title": "mr"
            },
            "booking_number": "291035229",
            "cancelable": false,
            "depart_at": "2019-12-16T10:40:05+01:00",
            "dropoff": {
                "address": "Fakeeh University Hospital, Dubai, Dubai",
                "latitude": "25.120876",
                "longitude": "55.387079",
                "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                "type": "google_place"
            },
            "editable": true,
            "invoiced": true,
            "passenger": {
                "email": "elliapi.testing@gmail.com",
                "first_name": "Piet",
                "last_name": "Mondrian",
                "locale": "en",
                "mobile": "+491701234567",
                "title": "mr",
                "uuid": "97d729a9-8409-4213-adff-4ed66f0e0a49"
            },
            "payment_method": {
                "label": "Credit card of Mario Luigi, ***1111",
                "type": "registered_method",
                "uuid": "749dfa30-7b1f-443f-abf8-46afe75ab783"
            },
            "pickup": {
                "address": "Flughafen 1, 12529 Sch\u00f6nefeld, Brandenburg",
                "latitude": "52.389432",
                "longitude": "13.513708",
                "place_id": "P:Q2hJSnp5eGx0ZnBHcUVjUk9iSzVfLVlScG1N",
                "type": "google_place"
            },
            "price": {
                "currency": "EUR",
                "items": {
                    "base": 2303406,
                    "rebate": -2303406,
                    "vat": 0
                },
                "total": 0,
                "vat_rate": 0.19
            },
            "rateable": false,
            "route": {
                "estimated_distance": 6250410,
                "estimated_duration": 224714,
                "polyline": "aiw~HqknqAf_jAgtf@|fYo_b@rpb@m_@lvYcdApl\\z`Yf{Yb|Ixx`@pwDzlEjgP~tDklLrwO_lf@ta_@ctGxl[aaMhoTcqAx}h@ol|@|kc@ife@~eKvlDtzn@uskAplp@ccsArvkA{noFnkv@mms@zmk@mob@jg~@meE~kx@sdR|n\\{cKx|e@wsbA`fBmdrBfkU_efAnzf@}cjCd~aAqqmArywA}fv@|mf@ybWviPklE~zR`tPfhNbn^je~@ryO~cv@wkDbw`@osV|eMore@jl_A}~p@|hL~pHb}Hgek@ryXir[`vOk|JomBirt@znx@w{Y~sa@ipJlaXukVzvYcu\\|aScyGha_@mcc@bhl@iwe@pbPawv@rhFa|u@daUmgg@vuk@}niArr[{nl@a_CscPx}PszVvpSkri@hfe@mdk@f`Kkm|@j|Rm_nA_kBg~x@doXowgBpgWiamA~sq@mmlBtce@gulCjmn@{jcCt{f@}|`CzNusk@}eEiw`@l_Amxh@jsReuWpt`@yps@haDaig@}Zast@|_Rw`y@qiWsahDnsKea}@obDwij@pm@oehAfqOgj`@nkNkaJphP}`@baNaxX`sVq`LviX}pSxyr@q`G`aRyaBxuEscXtj\\koIvpo@mlJjcl@_f}@rte@cp|@n}kAqbw@|hf@kpe@fz[yl@`kj@qcIdrs@sbj@~dSw~x@wvDwwNxyL{cPtl_@}lXn{R|yPnk\\kbJfvZgr`@rdFyw`DpcI}mdAdll@ctAtsa@nnHfaHozNMswRhvQqsd@lfZg~S|xTe~Mbuf@tdIvxNmkV|_OtdFro]~pRxvi@meEnomA_mJfpg@ntGlsHx|MpnLcnHx}g@c_Npxo@chBhvy@|xPfum@ds]fs_@nsl@djcA{dC|kwA~rRbleAu{Bnhg@zmE`kKogRnb]gbfA`ifAgzlAlxi@y{`ArdkBsvaBr{k@__{@~fVyig@vxNmop@|`p@safAn}q@ir~Axyb@_s}@rc_Acf\\r~qAeek@b_}@klh@ptx@y`z@|_k@ynbAtvW{o{@zneDmuaGbg|A_k`Dvu_@axu@lh_@iuSffXaugBlvPa_oApeZkrrA~fv@wp}AxzgA{{gBr_rAuhy@rsPgtY|~\\_nWvuy@w_`AhwPss^qbBurb@pVoi_BtfKeqzDsl@}udH`XeddDxiL{_fAthRq`UnoD_wh@qpQwqwAmpKikoAfqHuklBxfCyzkAehW_orAg{Xihq@{|[ulWa{eAmec@ofj@ugy@spRu}j@"
            },
            "send_sms": false,
            "type": "transfer_trip",
            "uuid": "24517955-06e6-4426-8eda-eac8f0e81113",
            "vehicle": {
                "category": "first_class",
                "max_luggage": 2,
                "max_passengers": 2
            }
        }
    ]
}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_depart_at_is_missing" time="0.120"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_depart_at_is_not_filled" time="0.153"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_depart_at_is_not_string" time="0.143"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_depart_at_is_wrong" time="0.117"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_depart_in_past" time="0.376"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_error_round_trip_return_less_than_depart" time="0.555"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_billing_address" time="0.469"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_corporate_invoice_mandatory_fields" time="0.408"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_corporation" time="0.539"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_external_agent" time="0.588"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_google_place" time="0.485"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_hotspot" time="0.448"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_pickup_sign" time="0.603"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_registered_method_mandatory_fields" time="0.612"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_sms_1_False" time="0.454"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_sms_2_True" time="0.469"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_type_value" time="0.530"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_vehicle_category_1_first_class" time="0.511"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_vehicle_category_2_business_van" time="0.449"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_vehicle_category_3_business_class" time="0.458"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_hourly_voucher" time="0.623"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_affiliates" time="1.047"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_billing_address" time="0.825"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_corporate_invoice_mandatory_fields" time="0.881"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_corporation" time="1.024"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_external_agent" time="1.010"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_google_place" time="0.902"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_hotspot" time="0.841"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_loyalty_program_1___asia_miles____1282084709__" time="1.108"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_loyalty_program_2___miles_and_more____992003004357384__" time="1.119"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_pickup_sign" time="0.894"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_registered_method_mandatory_fields" time="0.960"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_sms_1_False" time="1.130"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_sms_2_True" time="1.120"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_type_opposite_directions" time="0.922"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_type_value" time="0.930"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_vehicle_category_1_first_class" time="1.228"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_vehicle_category_2_business_van" time="1.212"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_vehicle_category_3_business_class" time="0.934"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_round_trip_voucher" time="1.213"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_3d_passenger" time="0.554"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_address" time="0.616"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_airport" time="0.586"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_billing_address" time="0.619"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_corporate_invoice_mandatory_fields" time="0.690"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_corporation" time="0.851"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_external_agent" time="0.800"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_pickup_special_reference" time="0.673"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_registered_method_mandatory_fields" time="0.966"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_sms_1_False" time="0.614"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_sms_2_True" time="0.515"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_trip_booking_value" time="0.495"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_vehicle_category_1_first_class" time="0.569"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_vehicle_category_2_business_van" time="0.555"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_vehicle_category_3_business_class" time="0.506"></testcase><testcase classname="app.tests.test_athena.test_athena_orders.TestAthenaUntrustedPOSTBookings" name="test_post_orders_transfer_voucher" time="0.644"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_area_not_covered" time="6.935"><failure type="builtins.AssertionError" message="None&#10;Expected: &lt;422&gt;&#10;     but: was &lt;200&gt;&#10;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;&#10;REQUEST:  curl -X POST -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX&quot; https://athena-auto.blacklane.io/orders/prices -d'{&quot;items&quot;: [{&quot;type&quot;: &quot;round_trip&quot;, &quot;depart_ride&quot;: {&quot;pickup&quot;: {&quot;address&quot;: &quot;Kronprinzessinnenweg 250, 14109 Berlin, Berlin&quot;, &quot;type&quot;: &quot;geocodable_address&quot;}, &quot;dropoff&quot;: {&quot;address&quot;: &quot;fake&quot;, &quot;type&quot;: &quot;geocodable_address&quot;}, &quot;depart_at&quot;: &quot;2020-04-05T19:56:26&quot;}, &quot;return_ride&quot;: {&quot;depart_at&quot;: &quot;2020-04-10T19:56:26&quot;}}]}'&#10;&#10;REQUEST-ID:  a8f2e574-6129-429b-85ba-1a0c6e6d892d&#10;&#10;RESPONSE:  {&#10;    &quot;corporation_uuid&quot;: &quot;a0b9d1b6-5207-4daf-bccc-648e1de33129&quot;,&#10;    &quot;items&quot;: [&#10;        {&#10;            &quot;depart_ride&quot;: {&#10;                &quot;business_district_code&quot;: &quot;DE BER&quot;,&#10;                &quot;customer_pricing_uuid&quot;: &quot;ced3eb94-6c0f-4a84-9eac-f12af7424bdc&quot;,&#10;                &quot;depart_at&quot;: &quot;2020-04-05T19:56:26+02:00&quot;,&#10;                &quot;dropoff&quot;: {&#10;                    &quot;address&quot;: &quot;Fakeeh University Hospital, Dubai, Dubai&quot;,&#10;                    &quot;latitude&quot;: &quot;25.120876&quot;,&#10;                    &quot;longitude&quot;: &quot;55.387079&quot;,&#10;                    &quot;place_id&quot;: &quot;P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj&quot;,&#10;                    &quot;type&quot;: &quot;google_place&quot;&#10;                },&#10;                &quot;lsp_pricing_uuid&quot;: &quot;155d6ca3-b049-473a-aa64-ab94f1df5f70&quot;,&#10;                &quot;pickup&quot;: {&#10;                    &quot;address&quot;: &quot;Kronprinzessinnenweg 250, 14109 Berlin, Berlin&quot;,&#10;                    &quot;latitude&quot;: &quot;52.421583&quot;,&#10;                    &quot;longitude&quot;: &quot;13.179281&quot;,&#10;                    &quot;place_id&quot;: &quot;P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0&quot;,&#10;                    &quot;type&quot;: &quot;google_place&quot;&#10;                },&#10;                &quot;results&quot;: [&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 1226158,&#10;                                &quot;rebate&quot;: -1226158,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;business_class&quot;,&#10;                            &quot;max_luggage&quot;: 2,&#10;                            &quot;max_passengers&quot;: 2&#10;                        }&#10;                    },&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 1721042,&#10;                                &quot;rebate&quot;: -1721042,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;business_van&quot;,&#10;                            &quot;max_luggage&quot;: 5,&#10;                            &quot;max_passengers&quot;: 5&#10;                        }&#10;                    },&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 2314878,&#10;                                &quot;rebate&quot;: -2314878,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;first_class&quot;,&#10;                            &quot;max_luggage&quot;: 2,&#10;                            &quot;max_passengers&quot;: 2&#10;                        }&#10;                    }&#10;                ],&#10;                &quot;route&quot;: {&#10;                    &quot;estimated_distance&quot;: 6281526,&#10;                    &quot;estimated_duration&quot;: 225521,&#10;                    &quot;polyline&quot;: &quot;sr}~H_amoAstJesX|tDgt\\xo}@gcc@hsd@}qU~vLaiYnuT~sEvp\\opPffYvyO|aWzd\\toe@}~DlqQla[~`L}s_@viWsmRzs\\}eS`xXk`Ftk[et`@lxcAofdAvnIbsG~d^enu@bys@sbqAn`d@myiBvaf@}ccChxRezl@hc\\akLzdb@gyg@pim@kmOb_iAa|J~tu@ydVhxe@ulbAsE{ru@fbKqv`Btel@{sfCzje@qjoAd_g@qcc@rhi@ed\\t}rA{qp@duSkpCruNdlQxzP~t_@ht_ApuLxeXqUhsZopCxm^maXztMqwd@jo\\ckPnbb@gb^pqK|sCzwT_qs@fi]uz[a|Ak{u@zg[wwM|}_AsrU`xq@_or@`wa@gdVhlh@{zn@|`TeuNz|Faj_@j|Lcqt@hnB{~k@pmd@aam@hpQwh\\rkYefi@pkHc{h@~eUw_PtrFaf[lv[mup@bjScd_@`~Zks|BauAqi}@`iL_~_Av{Ymh~@~hVk{oAzi^wln@`t\\ktgCjv~AkrlGiw@ujq@~fEi`e@{eFmic@jcS}{Xbwh@wnzAps@oyr@ltKygt@kf@oenA{wV_hlAj_PcmwBrx@qyu@ar@{zm@jfOkj]rj`@}jJzqWc{_@x`[yfMbac@qxIphm@kwHl}FmfSjfN_iEnze@ioPl_q@wj]lcOmfx@lnYmwY~|i@qp`@xdtAcgbAfpqAwnX~{p@qvj@fmHueZa~Cgdo@vva@wn[tfWzzEpd[jlAbu^muX|vGyexCdoEusdAt_Poa]nzW|Nvid@ldHhoN}jFdbEqdHwfIsnZvye@gzXdrTefc@`k_@`sFboRbgGz{KszZrd^|sJx_k@x`NfngAseXp`g@|eIte]lpP|gZsjMdkr@{xGhe~@tjHhlo@lkUv_m@tso@l|MtgMvw_@fSx~{A`tJ`l}@d`Ch~m@wpHjw_@v}LfpX}ccA|wNiji@xsr@gw]rmh@kpkAbqjBipbBt|l@_lz@jjc@upmAfkkBi{aDlaJopt@|{t@kb}@xl`Bgsg@xfpAi}i@n{s@e`t@v_r@as{@`oZoieAdl|Be}bEzrtDywtHrwa@wfJ`gBoz|@xsW_a`BdpO}tjAd`o@ekvAzraAigpBxipAmufAdth@oaTz~RexZngv@yw{@zyb@it{@siJ}b`BlrM}cxAsrAcxyAnsHilpB_SunrDbsBq_}Fl|c@clt@}aNkqwAorFgdnAifB_{jBzeKoqjA_lUyswAiwd@wnvAccgAum_@wyz@ec~@oyY_}v@d^cn@&quot;&#10;                }&#10;            },&#10;            &quot;return_ride&quot;: {&#10;                &quot;business_district_code&quot;: &quot;DE BER&quot;,&#10;                &quot;customer_pricing_uuid&quot;: &quot;ced3eb94-6c0f-4a84-9eac-f12af7424bdc&quot;,&#10;                &quot;depart_at&quot;: &quot;2020-04-10T19:56:26+02:00&quot;,&#10;                &quot;dropoff&quot;: {&#10;                    &quot;address&quot;: &quot;Kronprinzessinnenweg 250, 14109 Berlin, Berlin&quot;,&#10;                    &quot;latitude&quot;: &quot;52.421583&quot;,&#10;                    &quot;longitude&quot;: &quot;13.179281&quot;,&#10;                    &quot;place_id&quot;: &quot;P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0&quot;,&#10;                    &quot;type&quot;: &quot;google_place&quot;&#10;                },&#10;                &quot;lsp_pricing_uuid&quot;: &quot;155d6ca3-b049-473a-aa64-ab94f1df5f70&quot;,&#10;                &quot;pickup&quot;: {&#10;                    &quot;address&quot;: &quot;Fakeeh University Hospital, Dubai, Dubai&quot;,&#10;                    &quot;latitude&quot;: &quot;25.120876&quot;,&#10;                    &quot;longitude&quot;: &quot;55.387079&quot;,&#10;                    &quot;place_id&quot;: &quot;P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj&quot;,&#10;                    &quot;type&quot;: &quot;google_place&quot;&#10;                },&#10;                &quot;results&quot;: [&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 1227203,&#10;                                &quot;rebate&quot;: -1227203,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;business_class&quot;,&#10;                            &quot;max_luggage&quot;: 2,&#10;                            &quot;max_passengers&quot;: 2&#10;                        }&#10;                    },&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 1722508,&#10;                                &quot;rebate&quot;: -1722508,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;business_van&quot;,&#10;                            &quot;max_luggage&quot;: 5,&#10;                            &quot;max_passengers&quot;: 5&#10;                        }&#10;                    },&#10;                    {&#10;                        &quot;price&quot;: {&#10;                            &quot;currency&quot;: &quot;EUR&quot;,&#10;                            &quot;items&quot;: {&#10;                                &quot;base_price&quot;: 2316848,&#10;                                &quot;rebate&quot;: -2316848,&#10;                                &quot;vat&quot;: 0&#10;                            },&#10;                            &quot;total&quot;: 0,&#10;                            &quot;vat_rate&quot;: 0.19&#10;                        },&#10;                        &quot;vehicle&quot;: {&#10;                            &quot;category&quot;: &quot;first_class&quot;,&#10;                            &quot;max_luggage&quot;: 2,&#10;                            &quot;max_passengers&quot;: 2&#10;                        }&#10;                    }&#10;                ],&#10;                &quot;route&quot;: {&#10;                    &quot;estimated_distance&quot;: 6286873,&#10;                    &quot;estimated_duration&quot;: 226271,&#10;                    &quot;polyline&quot;: &quot;kiixCgx`qIv{Rvim@z}t@zx}@f~iArcb@`no@fabB~fQbr|Ak{GzmgBruAvhwA||LhhiAz|@rgwA{}`@b{t@}DzquFspEngoG`ElmbBusNjwgBx~K~`tAarh@hqhAy|{@ppw@wfKt_W{{`@fdPm~kAf{_AmpiA|swB}qp@v`yAojP~rlAgxV~igBumHteu@ox\\x~G}h_Ax}lBs`bCbn}E}fwB`|qDmgRnzgAogu@rfx@arv@~wt@mssA~rj@auaBnhk@ori@p|z@_mK`ep@alv@firA}wo@rlqA}bUpuo@yq_@j_g@scn@pwx@yhu@dxn@wou@hjaAc~Lvv]cdm@|hm@meRvgK_~Ap|TylYz}e@udJtoVm{N|aAgssAf_EydnBc_Roah@tlIcqPuhOg~c@k|h@gxp@___@mphA{aIqmn@hhDecSlxN{hUi~Kwca@smCs_f@q{Ewlj@tcOaul@nyEk_^mlRmsOolF}pNf|[oqk@_{PcfSf{]opk@luWzxGxta@k~DpsGwjM~qK_od@_|JibYq_@wrPl{\\swB`p_AaoFh{iAhkBvkmAki`@l|Ryl[bgMq_TalPyac@pp[shBfvh@afA`e]ulq@vvm@_gwAnp]_gwA|leA{rt@hgg@ayg@bfwAkku@b|Qyrn@dmJbaEdvXezTrvHm_s@pcCoiYf~V}kWvtF}k_@ro[oiNteH}nOri]{|DzkhAzaIhqr@ieKlfg@j_@~drAraNzg_BecLzzlBc|@~tl@}fa@r`n@uaY|vcAlgEx`c@oqDfdm@s`Ejtr@}yRfk`Acsr@``cCavh@lwcCwaJh{}@aq^dvw@kku@nx}Cyj@jbuBo|XlhfBs`q@nyhAeiF~j]m~Px|MsbMr}m@kwk@h~cAc`Fv|ScwZr}WooEfxg@gaa@ngkBcyk@rcm@ana@`mX}{b@lq]_a\\|m]sghAppS}eGl`~@axo@pvt@_gLtvXit\\jrQ}`^plTkpTldj@{k^x`Wu~\\`yCkzsAubIonZctn@acg@dbDq`xA|w}@k|oAxo}@}qXlneAmwj@xkgCmsE~igBqrHncq@wse@zwy@u}s@lvVsvhAzwHqvp@hbV}r`@pre@kva@bdKm`O`wr@a{g@n|rC}|Pbvu@mpYtbi@}vp@fcrAy`Wz}g@wiIcbIskiApexAavSdcScy\\ikDkxI~`VghSamAadSb~`@ewCnpPezEu}CeuZ_xNio_@agA{m^aw^ieaAbzDcv\\dzf@ihl@jeRot]p{IysHl{[hoHjae@&quot;&#10;                }&#10;            },&#10;            &quot;total_prices&quot;: [&#10;                {&#10;                    &quot;price&quot;: {&#10;                        &quot;currency&quot;: &quot;EUR&quot;,&#10;                        &quot;total&quot;: 0,&#10;                        &quot;vat_rate&quot;: 0.19&#10;                    },&#10;                    &quot;vehicle&quot;: {&#10;                        &quot;category&quot;: &quot;business_class&quot;,&#10;                        &quot;max_luggage&quot;: 2,&#10;                        &quot;max_passengers&quot;: 2&#10;                    }&#10;                },&#10;                {&#10;                    &quot;price&quot;: {&#10;                        &quot;currency&quot;: &quot;EUR&quot;,&#10;                        &quot;total&quot;: 0,&#10;                        &quot;vat_rate&quot;: 0.19&#10;                    },&#10;                    &quot;vehicle&quot;: {&#10;                        &quot;category&quot;: &quot;business_van&quot;,&#10;                        &quot;max_luggage&quot;: 5,&#10;                        &quot;max_passengers&quot;: 5&#10;                    }&#10;                },&#10;                {&#10;                    &quot;price&quot;: {&#10;                        &quot;currency&quot;: &quot;EUR&quot;,&#10;                        &quot;total&quot;: 0,&#10;                        &quot;vat_rate&quot;: 0.19&#10;                    },&#10;                    &quot;vehicle&quot;: {&#10;                        &quot;category&quot;: &quot;first_class&quot;,&#10;                        &quot;max_luggage&quot;: 2,&#10;                        &quot;max_passengers&quot;: 2&#10;                    }&#10;                }&#10;            ],&#10;            &quot;type&quot;: &quot;round_trip&quot;&#10;        }&#10;    ]&#10;}&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.prices_factory.OrdersRoundTripFactory(extra={})&#10;factory.generate: DEBUG: &lt;class 'factories.athena.prices_factory.OrdersRoundTripFactory'&gt;: Setting up next sequence (0)&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;factory.generate: DEBUG: BaseFactory: Preparing factories.athena.prices_factory.OrdersRoundTripFactory(extra={})&#10;factory.containers: DEBUG: LazyStub: Computing values for factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;factory.generate: DEBUG: BaseFactory: Generating factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders/prices HTTP/1.1&quot; 200 2707&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders/prices HTTP/1.1&quot; 200 2707&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders/prices HTTP/1.1&quot; 200 2707&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders/prices HTTP/1.1&quot; 200 2707&#10;requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io&#10;requests.packages.urllib3.connectionpool: DEBUG: &quot;POST /orders/prices HTTP/1.1&quot; 200 2707&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/local/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/local/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/app/tests/test_athena/test_athena_orders_prices.py", line 223, in test_error_round_trip_area_not_covered
    assert_422(lambda: self.api.send_request(POST, not_covered, mode=JSON))
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 49, in wrapped_f
    return Retrying(*dargs, **dkw).call(f, *args, **kw)
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 212, in call
    raise attempt.get()
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 247, in get
    six.reraise(self.value[0], self.value[1], self.value[2])
  File "/usr/local/lib/python3.5/site-packages/six.py", line 686, in reraise
    raise value
  File "/usr/local/lib/python3.5/site-packages/retrying.py", line 200, in call
    attempt = Attempt(fn(*args, **kwargs), attempt_number, False)
  File "/app/utils/helpers.py", line 176, in assert_422
    assert_that(f(), equal_to(422), err)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 43, in assert_that
    _assert_match(actual=arg1, matcher=arg2, reason=arg3)
  File "/usr/local/lib/python3.5/site-packages/hamcrest/core/assert_that.py", line 57, in _assert_match
    raise AssertionError(description)
None
Expected: <422>
     but: was <200>

-------------------- >> begin captured stdout << ---------------------

REQUEST:  curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/orders/prices -d'{"items": [{"type": "round_trip", "depart_ride": {"pickup": {"address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin", "type": "geocodable_address"}, "dropoff": {"address": "fake", "type": "geocodable_address"}, "depart_at": "2020-04-05T19:56:26"}, "return_ride": {"depart_at": "2020-04-10T19:56:26"}}]}'

REQUEST-ID:  a8f2e574-6129-429b-85ba-1a0c6e6d892d

RESPONSE:  {
    "corporation_uuid": "a0b9d1b6-5207-4daf-bccc-648e1de33129",
    "items": [
        {
            "depart_ride": {
                "business_district_code": "DE BER",
                "customer_pricing_uuid": "ced3eb94-6c0f-4a84-9eac-f12af7424bdc",
                "depart_at": "2020-04-05T19:56:26+02:00",
                "dropoff": {
                    "address": "Fakeeh University Hospital, Dubai, Dubai",
                    "latitude": "25.120876",
                    "longitude": "55.387079",
                    "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                    "type": "google_place"
                },
                "lsp_pricing_uuid": "155d6ca3-b049-473a-aa64-ab94f1df5f70",
                "pickup": {
                    "address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin",
                    "latitude": "52.421583",
                    "longitude": "13.179281",
                    "place_id": "P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0",
                    "type": "google_place"
                },
                "results": [
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1226158,
                                "rebate": -1226158,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1721042,
                                "rebate": -1721042,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_van",
                            "max_luggage": 5,
                            "max_passengers": 5
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 2314878,
                                "rebate": -2314878,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "first_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    }
                ],
                "route": {
                    "estimated_distance": 6281526,
                    "estimated_duration": 225521,
                    "polyline": "sr}~H_amoAstJesX|tDgt\\xo}@gcc@hsd@}qU~vLaiYnuT~sEvp\\opPffYvyO|aWzd\\toe@}~DlqQla[~`L}s_@viWsmRzs\\}eS`xXk`Ftk[et`@lxcAofdAvnIbsG~d^enu@bys@sbqAn`d@myiBvaf@}ccChxRezl@hc\\akLzdb@gyg@pim@kmOb_iAa|J~tu@ydVhxe@ulbAsE{ru@fbKqv`Btel@{sfCzje@qjoAd_g@qcc@rhi@ed\\t}rA{qp@duSkpCruNdlQxzP~t_@ht_ApuLxeXqUhsZopCxm^maXztMqwd@jo\\ckPnbb@gb^pqK|sCzwT_qs@fi]uz[a|Ak{u@zg[wwM|}_AsrU`xq@_or@`wa@gdVhlh@{zn@|`TeuNz|Faj_@j|Lcqt@hnB{~k@pmd@aam@hpQwh\\rkYefi@pkHc{h@~eUw_PtrFaf[lv[mup@bjScd_@`~Zks|BauAqi}@`iL_~_Av{Ymh~@~hVk{oAzi^wln@`t\\ktgCjv~AkrlGiw@ujq@~fEi`e@{eFmic@jcS}{Xbwh@wnzAps@oyr@ltKygt@kf@oenA{wV_hlAj_PcmwBrx@qyu@ar@{zm@jfOkj]rj`@}jJzqWc{_@x`[yfMbac@qxIphm@kwHl}FmfSjfN_iEnze@ioPl_q@wj]lcOmfx@lnYmwY~|i@qp`@xdtAcgbAfpqAwnX~{p@qvj@fmHueZa~Cgdo@vva@wn[tfWzzEpd[jlAbu^muX|vGyexCdoEusdAt_Poa]nzW|Nvid@ldHhoN}jFdbEqdHwfIsnZvye@gzXdrTefc@`k_@`sFboRbgGz{KszZrd^|sJx_k@x`NfngAseXp`g@|eIte]lpP|gZsjMdkr@{xGhe~@tjHhlo@lkUv_m@tso@l|MtgMvw_@fSx~{A`tJ`l}@d`Ch~m@wpHjw_@v}LfpX}ccA|wNiji@xsr@gw]rmh@kpkAbqjBipbBt|l@_lz@jjc@upmAfkkBi{aDlaJopt@|{t@kb}@xl`Bgsg@xfpAi}i@n{s@e`t@v_r@as{@`oZoieAdl|Be}bEzrtDywtHrwa@wfJ`gBoz|@xsW_a`BdpO}tjAd`o@ekvAzraAigpBxipAmufAdth@oaTz~RexZngv@yw{@zyb@it{@siJ}b`BlrM}cxAsrAcxyAnsHilpB_SunrDbsBq_}Fl|c@clt@}aNkqwAorFgdnAifB_{jBzeKoqjA_lUyswAiwd@wnvAccgAum_@wyz@ec~@oyY_}v@d^cn@"
                }
            },
            "return_ride": {
                "business_district_code": "DE BER",
                "customer_pricing_uuid": "ced3eb94-6c0f-4a84-9eac-f12af7424bdc",
                "depart_at": "2020-04-10T19:56:26+02:00",
                "dropoff": {
                    "address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin",
                    "latitude": "52.421583",
                    "longitude": "13.179281",
                    "place_id": "P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0",
                    "type": "google_place"
                },
                "lsp_pricing_uuid": "155d6ca3-b049-473a-aa64-ab94f1df5f70",
                "pickup": {
                    "address": "Fakeeh University Hospital, Dubai, Dubai",
                    "latitude": "25.120876",
                    "longitude": "55.387079",
                    "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                    "type": "google_place"
                },
                "results": [
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1227203,
                                "rebate": -1227203,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1722508,
                                "rebate": -1722508,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_van",
                            "max_luggage": 5,
                            "max_passengers": 5
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 2316848,
                                "rebate": -2316848,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "first_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    }
                ],
                "route": {
                    "estimated_distance": 6286873,
                    "estimated_duration": 226271,
                    "polyline": "kiixCgx`qIv{Rvim@z}t@zx}@f~iArcb@`no@fabB~fQbr|Ak{GzmgBruAvhwA||LhhiAz|@rgwA{}`@b{t@}DzquFspEngoG`ElmbBusNjwgBx~K~`tAarh@hqhAy|{@ppw@wfKt_W{{`@fdPm~kAf{_AmpiA|swB}qp@v`yAojP~rlAgxV~igBumHteu@ox\\x~G}h_Ax}lBs`bCbn}E}fwB`|qDmgRnzgAogu@rfx@arv@~wt@mssA~rj@auaBnhk@ori@p|z@_mK`ep@alv@firA}wo@rlqA}bUpuo@yq_@j_g@scn@pwx@yhu@dxn@wou@hjaAc~Lvv]cdm@|hm@meRvgK_~Ap|TylYz}e@udJtoVm{N|aAgssAf_EydnBc_Roah@tlIcqPuhOg~c@k|h@gxp@___@mphA{aIqmn@hhDecSlxN{hUi~Kwca@smCs_f@q{Ewlj@tcOaul@nyEk_^mlRmsOolF}pNf|[oqk@_{PcfSf{]opk@luWzxGxta@k~DpsGwjM~qK_od@_|JibYq_@wrPl{\\swB`p_AaoFh{iAhkBvkmAki`@l|Ryl[bgMq_TalPyac@pp[shBfvh@afA`e]ulq@vvm@_gwAnp]_gwA|leA{rt@hgg@ayg@bfwAkku@b|Qyrn@dmJbaEdvXezTrvHm_s@pcCoiYf~V}kWvtF}k_@ro[oiNteH}nOri]{|DzkhAzaIhqr@ieKlfg@j_@~drAraNzg_BecLzzlBc|@~tl@}fa@r`n@uaY|vcAlgEx`c@oqDfdm@s`Ejtr@}yRfk`Acsr@``cCavh@lwcCwaJh{}@aq^dvw@kku@nx}Cyj@jbuBo|XlhfBs`q@nyhAeiF~j]m~Px|MsbMr}m@kwk@h~cAc`Fv|ScwZr}WooEfxg@gaa@ngkBcyk@rcm@ana@`mX}{b@lq]_a\\|m]sghAppS}eGl`~@axo@pvt@_gLtvXit\\jrQ}`^plTkpTldj@{k^x`Wu~\\`yCkzsAubIonZctn@acg@dbDq`xA|w}@k|oAxo}@}qXlneAmwj@xkgCmsE~igBqrHncq@wse@zwy@u}s@lvVsvhAzwHqvp@hbV}r`@pre@kva@bdKm`O`wr@a{g@n|rC}|Pbvu@mpYtbi@}vp@fcrAy`Wz}g@wiIcbIskiApexAavSdcScy\\ikDkxI~`VghSamAadSb~`@ewCnpPezEu}CeuZ_xNio_@agA{m^aw^ieaAbzDcv\\dzf@ihl@jeRot]p{IysHl{[hoHjae@"
                }
            },
            "total_prices": [
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "business_class",
                        "max_luggage": 2,
                        "max_passengers": 2
                    }
                },
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "business_van",
                        "max_luggage": 5,
                        "max_passengers": 5
                    }
                },
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "first_class",
                        "max_luggage": 2,
                        "max_passengers": 2
                    }
                }
            ],
            "type": "round_trip"
        }
    ]
}

--------------------- >> end captured stdout << ----------------------
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.prices_factory.OrdersRoundTripFactory(extra={})
factory.generate: DEBUG: <class 'factories.athena.prices_factory.OrdersRoundTripFactory'>: Setting up next sequence (0)
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
factory.generate: DEBUG: BaseFactory: Generating factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
factory.generate: DEBUG: BaseFactory: Preparing factories.athena.prices_factory.OrdersRoundTripFactory(extra={})
factory.containers: DEBUG: LazyStub: Computing values for factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
factory.containers: DEBUG: LazyStub: Computed values, got factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
factory.generate: DEBUG: BaseFactory: Generating factories.athena.prices_factory.OrdersRoundTripFactory(items=[{'type': 'round_trip', 'depart_ride': {'pickup': {'address': 'Kronprinzessinnenweg 250, 14109 Berlin, Berlin', 'type': 'geocodable_address'}, 'dropoff': {'address': 'Friedrichstraße 58, 10117 Berlin, Berlin', 'type': 'geocodable_address'}, 'depart_at': '2020-04-05T19:56:26'}, 'return_ride': {'depart_at': '2020-04-10T19:56:26'}}])
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders/prices HTTP/1.1" 200 2707
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders/prices HTTP/1.1" 200 2707
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders/prices HTTP/1.1" 200 2707
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders/prices HTTP/1.1" 200 2707
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): athena-auto.blacklane.io
requests.packages.urllib3.connectionpool: DEBUG: "POST /orders/prices HTTP/1.1" 200 2707
--------------------- >> end captured logging << ---------------------]]></failure><system-out><![CDATA[
REQUEST:  curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer dqb0tj3KVZGSP2PX9D3LGuWx21J9o3eX" https://athena-auto.blacklane.io/orders/prices -d'{"items": [{"type": "round_trip", "depart_ride": {"pickup": {"address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin", "type": "geocodable_address"}, "dropoff": {"address": "fake", "type": "geocodable_address"}, "depart_at": "2020-04-05T19:56:26"}, "return_ride": {"depart_at": "2020-04-10T19:56:26"}}]}'

REQUEST-ID:  a8f2e574-6129-429b-85ba-1a0c6e6d892d

RESPONSE:  {
    "corporation_uuid": "a0b9d1b6-5207-4daf-bccc-648e1de33129",
    "items": [
        {
            "depart_ride": {
                "business_district_code": "DE BER",
                "customer_pricing_uuid": "ced3eb94-6c0f-4a84-9eac-f12af7424bdc",
                "depart_at": "2020-04-05T19:56:26+02:00",
                "dropoff": {
                    "address": "Fakeeh University Hospital, Dubai, Dubai",
                    "latitude": "25.120876",
                    "longitude": "55.387079",
                    "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                    "type": "google_place"
                },
                "lsp_pricing_uuid": "155d6ca3-b049-473a-aa64-ab94f1df5f70",
                "pickup": {
                    "address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin",
                    "latitude": "52.421583",
                    "longitude": "13.179281",
                    "place_id": "P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0",
                    "type": "google_place"
                },
                "results": [
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1226158,
                                "rebate": -1226158,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1721042,
                                "rebate": -1721042,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_van",
                            "max_luggage": 5,
                            "max_passengers": 5
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 2314878,
                                "rebate": -2314878,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "first_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    }
                ],
                "route": {
                    "estimated_distance": 6281526,
                    "estimated_duration": 225521,
                    "polyline": "sr}~H_amoAstJesX|tDgt\\xo}@gcc@hsd@}qU~vLaiYnuT~sEvp\\opPffYvyO|aWzd\\toe@}~DlqQla[~`L}s_@viWsmRzs\\}eS`xXk`Ftk[et`@lxcAofdAvnIbsG~d^enu@bys@sbqAn`d@myiBvaf@}ccChxRezl@hc\\akLzdb@gyg@pim@kmOb_iAa|J~tu@ydVhxe@ulbAsE{ru@fbKqv`Btel@{sfCzje@qjoAd_g@qcc@rhi@ed\\t}rA{qp@duSkpCruNdlQxzP~t_@ht_ApuLxeXqUhsZopCxm^maXztMqwd@jo\\ckPnbb@gb^pqK|sCzwT_qs@fi]uz[a|Ak{u@zg[wwM|}_AsrU`xq@_or@`wa@gdVhlh@{zn@|`TeuNz|Faj_@j|Lcqt@hnB{~k@pmd@aam@hpQwh\\rkYefi@pkHc{h@~eUw_PtrFaf[lv[mup@bjScd_@`~Zks|BauAqi}@`iL_~_Av{Ymh~@~hVk{oAzi^wln@`t\\ktgCjv~AkrlGiw@ujq@~fEi`e@{eFmic@jcS}{Xbwh@wnzAps@oyr@ltKygt@kf@oenA{wV_hlAj_PcmwBrx@qyu@ar@{zm@jfOkj]rj`@}jJzqWc{_@x`[yfMbac@qxIphm@kwHl}FmfSjfN_iEnze@ioPl_q@wj]lcOmfx@lnYmwY~|i@qp`@xdtAcgbAfpqAwnX~{p@qvj@fmHueZa~Cgdo@vva@wn[tfWzzEpd[jlAbu^muX|vGyexCdoEusdAt_Poa]nzW|Nvid@ldHhoN}jFdbEqdHwfIsnZvye@gzXdrTefc@`k_@`sFboRbgGz{KszZrd^|sJx_k@x`NfngAseXp`g@|eIte]lpP|gZsjMdkr@{xGhe~@tjHhlo@lkUv_m@tso@l|MtgMvw_@fSx~{A`tJ`l}@d`Ch~m@wpHjw_@v}LfpX}ccA|wNiji@xsr@gw]rmh@kpkAbqjBipbBt|l@_lz@jjc@upmAfkkBi{aDlaJopt@|{t@kb}@xl`Bgsg@xfpAi}i@n{s@e`t@v_r@as{@`oZoieAdl|Be}bEzrtDywtHrwa@wfJ`gBoz|@xsW_a`BdpO}tjAd`o@ekvAzraAigpBxipAmufAdth@oaTz~RexZngv@yw{@zyb@it{@siJ}b`BlrM}cxAsrAcxyAnsHilpB_SunrDbsBq_}Fl|c@clt@}aNkqwAorFgdnAifB_{jBzeKoqjA_lUyswAiwd@wnvAccgAum_@wyz@ec~@oyY_}v@d^cn@"
                }
            },
            "return_ride": {
                "business_district_code": "DE BER",
                "customer_pricing_uuid": "ced3eb94-6c0f-4a84-9eac-f12af7424bdc",
                "depart_at": "2020-04-10T19:56:26+02:00",
                "dropoff": {
                    "address": "Kronprinzessinnenweg 250, 14109 Berlin, Berlin",
                    "latitude": "52.421583",
                    "longitude": "13.179281",
                    "place_id": "P:Q2hJSjkySEVzeDVacUVjUndfY3hpYW5qOWs0",
                    "type": "google_place"
                },
                "lsp_pricing_uuid": "155d6ca3-b049-473a-aa64-ab94f1df5f70",
                "pickup": {
                    "address": "Fakeeh University Hospital, Dubai, Dubai",
                    "latitude": "25.120876",
                    "longitude": "55.387079",
                    "place_id": "P:Q2hJSnZ3X29rR3hrWHo0UlhOanhWcUMxZUtj",
                    "type": "google_place"
                },
                "results": [
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1227203,
                                "rebate": -1227203,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 1722508,
                                "rebate": -1722508,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "business_van",
                            "max_luggage": 5,
                            "max_passengers": 5
                        }
                    },
                    {
                        "price": {
                            "currency": "EUR",
                            "items": {
                                "base_price": 2316848,
                                "rebate": -2316848,
                                "vat": 0
                            },
                            "total": 0,
                            "vat_rate": 0.19
                        },
                        "vehicle": {
                            "category": "first_class",
                            "max_luggage": 2,
                            "max_passengers": 2
                        }
                    }
                ],
                "route": {
                    "estimated_distance": 6286873,
                    "estimated_duration": 226271,
                    "polyline": "kiixCgx`qIv{Rvim@z}t@zx}@f~iArcb@`no@fabB~fQbr|Ak{GzmgBruAvhwA||LhhiAz|@rgwA{}`@b{t@}DzquFspEngoG`ElmbBusNjwgBx~K~`tAarh@hqhAy|{@ppw@wfKt_W{{`@fdPm~kAf{_AmpiA|swB}qp@v`yAojP~rlAgxV~igBumHteu@ox\\x~G}h_Ax}lBs`bCbn}E}fwB`|qDmgRnzgAogu@rfx@arv@~wt@mssA~rj@auaBnhk@ori@p|z@_mK`ep@alv@firA}wo@rlqA}bUpuo@yq_@j_g@scn@pwx@yhu@dxn@wou@hjaAc~Lvv]cdm@|hm@meRvgK_~Ap|TylYz}e@udJtoVm{N|aAgssAf_EydnBc_Roah@tlIcqPuhOg~c@k|h@gxp@___@mphA{aIqmn@hhDecSlxN{hUi~Kwca@smCs_f@q{Ewlj@tcOaul@nyEk_^mlRmsOolF}pNf|[oqk@_{PcfSf{]opk@luWzxGxta@k~DpsGwjM~qK_od@_|JibYq_@wrPl{\\swB`p_AaoFh{iAhkBvkmAki`@l|Ryl[bgMq_TalPyac@pp[shBfvh@afA`e]ulq@vvm@_gwAnp]_gwA|leA{rt@hgg@ayg@bfwAkku@b|Qyrn@dmJbaEdvXezTrvHm_s@pcCoiYf~V}kWvtF}k_@ro[oiNteH}nOri]{|DzkhAzaIhqr@ieKlfg@j_@~drAraNzg_BecLzzlBc|@~tl@}fa@r`n@uaY|vcAlgEx`c@oqDfdm@s`Ejtr@}yRfk`Acsr@``cCavh@lwcCwaJh{}@aq^dvw@kku@nx}Cyj@jbuBo|XlhfBs`q@nyhAeiF~j]m~Px|MsbMr}m@kwk@h~cAc`Fv|ScwZr}WooEfxg@gaa@ngkBcyk@rcm@ana@`mX}{b@lq]_a\\|m]sghAppS}eGl`~@axo@pvt@_gLtvXit\\jrQ}`^plTkpTldj@{k^x`Wu~\\`yCkzsAubIonZctn@acg@dbDq`xA|w}@k|oAxo}@}qXlneAmwj@xkgCmsE~igBqrHncq@wse@zwy@u}s@lvVsvhAzwHqvp@hbV}r`@pre@kva@bdKm`O`wr@a{g@n|rC}|Pbvu@mpYtbi@}vp@fcrAy`Wz}g@wiIcbIskiApexAavSdcScy\\ikDkxI~`VghSamAadSb~`@ewCnpPezEu}CeuZ_xNio_@agA{m^aw^ieaAbzDcv\\dzf@ihl@jeRot]p{IysHl{[hoHjae@"
                }
            },
            "total_prices": [
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "business_class",
                        "max_luggage": 2,
                        "max_passengers": 2
                    }
                },
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "business_van",
                        "max_luggage": 5,
                        "max_passengers": 5
                    }
                },
                {
                    "price": {
                        "currency": "EUR",
                        "total": 0,
                        "vat_rate": 0.19
                    },
                    "vehicle": {
                        "category": "first_class",
                        "max_luggage": 2,
                        "max_passengers": 2
                    }
                }
            ],
            "type": "round_trip"
        }
    ]
}
]]></system-out></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_depart_at_is_missing" time="0.114"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_depart_at_is_not_filled" time="0.137"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_depart_at_is_not_string" time="0.141"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_depart_at_is_wrong" time="0.111"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_depart_in_past" time="0.315"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_missing_token" time="0.086"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_error_round_trip_return_less_than_depart" time="0.130"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_hourly_trip_address" time="0.185"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_hourly_trip_external_agent" time="0.234"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_hourly_trip_geocodable_address" time="0.178"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_hourly_trip_hotspot_uuid" time="0.160"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_hourly_trip_responce_validation" time="0.189"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_round_trip_address" time="0.463"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_round_trip_address_corporation" time="0.436"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_round_trip_address_full_discount" time="0.386"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_round_trip_google_place" time="0.344"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_round_trip_responce_validation" time="0.373"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_transfer_trip_address" time="0.234"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_transfer_trip_address_voucher" time="0.248"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_transfer_trip_airport_iata" time="0.196"></testcase><testcase classname="app.tests.test_athena.test_athena_orders_prices.TestAthenaPOSTOrdersPricesUntrusted" name="test_get_prices_transfer_trip_responce_validation" time="0.244"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesTrusted" name="test_get_prices_with_place_id_keys" time="0.256"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesTrusted" name="test_place_id_response_code" time="0.190"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_business_district_code_hourly" time="0.169"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_business_district_code_transfer" time="0.248"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_business_district_for_dropoff" time="0.561"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_area_not_covered" time="0.202"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_depart_at_invalid" time="0.111"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_depart_at_missing" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_depart_at_no_prices_found" time="0.198"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_duration_missing" time="0.117"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_dropoff_missing" time="0.097"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_duration_negative" time="0.094"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_duration_non_integer" time="0.096"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_duration_under_7200" time="0.118"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_duration_zero" time="0.104"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_hourly_pickup_invalid" time="0.162"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_invalid_token" time="0.112"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_missing_token" time="0.104"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_pickup_and_dropoff_conflict" time="0.117"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_service_type_invalid" time="0.101"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_service_type_missing" time="0.094"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_depart_at_in_the_past" time="0.187"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_dropoff_invalid" time="0.194"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_dropoff_missing" time="0.100"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_pickup_invalid" time="0.187"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_pickup_missing" time="0.122"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_too_early" time="0.207"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_transfer_voucher_code_invalid" time="0.242"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_error_unauthorized_priority_over_others" time="0.090"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_duration_ignored_on_transfer" time="0.283"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_address_code" time="0.210"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_common_keys" time="0.174"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_iata_codes" time="0.230"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_latlong" time="0.225"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_place_id" time="0.162"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_hourly_with_uuid" time="0.198"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_results_contain_keys" time="0.287"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_address" time="0.293"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_common_keys" time="0.237"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_coordinates_dropoff_missing" time="0.111"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_coordinates_pickup_missing" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_iata_codes" time="0.239"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_latlong" time="0.467"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_place_id" time="0.250"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_response_has_common" time="0.227"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_response_has_results" time="0.225"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_with_uuids" time="0.290"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_transfer_with_voucher_code" time="0.310"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_get_prices_with_external_agent" time="0.486"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_prices_total_amount_equals_net_plus_vat" time="0.318"></testcase><testcase classname="app.tests.test_athena.test_athena_prices.TestAthenaGETPricesUntrusted" name="test_transfer_airport_fee_present" time="0.276"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_email_invalid" time="0.160"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_email_missing" time="0.159"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_fax_invalid" time="0.168"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_first_name_invalid" time="0.146"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_first_name_missing" time="0.137"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_is_guest_invalid" time="0.119"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_landline_invalid" time="0.143"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_last_name_invalid" time="0.142"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_last_name_missing" time="0.140"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_mobile_invalid" time="0.157"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_mobile_missing" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_password_invalid" time="0.159"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_title_invalid" time="0.161"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_error_title_missing" time="0.100"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_guest_user" time="0.249"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_mandatory_fields" time="0.303"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_user_invoice_info" time="0.315"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_user_landline_and_fax" time="0.265"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_user_notifications" time="0.285"></testcase><testcase classname="app.tests.test_athena.test_athena_users.TestAthenaPOSTUsers" name="test_user_title_unknown" time="0.285"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_email_invalid" time="0.155"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_first_name_invalid" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_landline_invalid" time="0.152"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_last_name_invalid" time="0.125"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_mobile_invalid" time="0.126"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_password_invalid" time="0.145"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_password_token_required" time="0.098"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_error_title_invalid" time="0.121"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_email" time="0.176"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_multiple_user_fields" time="0.168"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_notifications" time="0.165"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_password" time="0.586"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_street_address" time="0.159"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_update_user_title" time="0.198"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me.TestAthenaPUTUsersMe" name="test_uuid_cannot_be_updated" time="0.209"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_change_user_preferences_channel" time="0.157"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_change_user_preferences_email" time="0.130"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_change_user_preferences_push" time="0.137"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_change_user_preferences_sms" time="0.133"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_check_user_preferences_channels" time="0.138"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_check_user_preferences_email" time="0.130"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_check_user_preferences_push" time="0.148"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_check_user_preferences_sms" time="0.139"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_error_user_preferences_invalid_group" time="0.114"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_error_user_preferences_name_invalid" time="0.141"></testcase><testcase classname="app.tests.test_athena.test_athena_users_me_preferences.TestAthenaPUTUsersMePreferences" name="test_error_user_preferences_name_missed" time="0.120"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerNumbers" name="test_delete_airline_program" time="0.295"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerNumbers" name="test_error_frequent_flyer_number_not_found" time="0.124"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerNumbers" name="test_get_airline_program" time="0.712"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerNumbers" name="test_update_is_default_to_true" time="0.797"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerPrograms" name="test_get_airline_programs_code" time="0.107"></testcase><testcase classname="app.tests.test_athena.test_frequent_flyer.TestAthenaFrequentFlyerPrograms" name="test_get_airline_programs_names" time="0.140"></testcase></testsuite>